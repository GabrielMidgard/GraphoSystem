<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="704" height="466" 
	layout="absolute" 
	horizontalCenter="0" 
	title="Datos de Recolección" 
	verticalCenter="0"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	showCloseButton="true">

	<mx:Script>
		<![CDATA[
			import mx.random.constants.ConstantData;
			
			import mx.random.constants.Catalogs;
			import mx.random.windowManagers.PopManager;
			import mx.random.constants.Languages;
			import mx.random.forms.Validator;
			import mx.random.dataManagers.EventManager;
			import mx.random.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.web.WebApplication;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.rpc.remoting.RemoteObject;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 	= new RemoteObject();
[Bindable]	private var _Data:DataManager 			= new DataManager(this);
[Bindable]	private var _DataResult:ArrayCollection = new ArrayCollection();			
			private var _eventManager:EventManager 	= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------

[Bindable]	public var _dataReady:Boolean 			= false;
[Bindable]	public var _newData:Boolean 			= false;
[Bindable]	public var _updateData:Boolean 			= false;

			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number 		= 0;
			private var _selectedName:String 	= "";
			private var _serviceName  			= "Fiscales_Recoleccion";
			private var _mainId  				= "_idDireccion";
			private var _relationId  			= "_idCliente";
			private var _mainFocusField:String  = "_calle";
			private var _dataObject:Object  	= new Object();
//<------->			

[Bindable]	private var _idCliente:Number 		= 0;
[Bindable]	private var _idDireccion:Number 	= 0;
[Bindable]	private var _nombreEmpresa:String 	= "";
	
			public function set relationIdValue(value:Number):void { _idCliente = value }
			
			public function set dataObject(value:Object):void	{
				_nombreEmpresa = value._nombreEmpresa;	
				_dataObject = value;	
				_idCliente = 	value._idCliente;	
			}
			
			//-----------Local Vars -----------

			
//---------------------------- Context ---------------------------------------------            

   			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
			}

			public function set workManager(value:Object):void{
				_workManager = value;
			}

			public function set webApplication(value:WebApplication):void{
				_webApplication = value;
				initView();
			}
			public function get webApplication():WebApplication{ return _webApplication; } 
						
//---------------------------- Context ---------------------------------------------  

//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				return {webApplication: _webApplication,
						workManager: this
						}					
			}

			private function addValidations():void{
				Valid.changeLanguage(Languages.SPANISH);
				Valid.setErrorKnot(Validator.CIRCLE_KNOT,0xFF0000);	
				Valid.validateOnChange = true;		

				Valid.addStringVal(_calle,5,255,"Calle");
				Valid.addStringVal(_numeroExterior,1,8,"Número Exterior");
				Valid.addStringVal(_ciudad,2,50,"Ciudad");
				Valid.addStringVal(_colonia,2,50,"Colonia");
				Valid.addComboVal(_estado,"Estado");
				Valid.addStringVal(_cp,5,5,"Código Postal");
								
					
			}
			
			private function extraCreateData(params:Object):Object{
				params[_relationId] = this[_relationId];
				//params["_newsImage"] = _image;
				//params['_fechaNacimiento'] 	= _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;
				return params;
			}
			
			private function createRecordExtras():void{
				//_image = "defaultNew.jpg";
				/*_day.selectedIndex 	= 0;
				_month.selectedIndex 	= 0;
				_year.selectedIndex 	= 0;*/
			}
			
			private function extraUpdateData(params:Object):Object{	
				//params['_fechaNacimiento'] = _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;			
				return params;
			}
			
			private function loadExtraFields(params:Object):void{
				//_image = params["_newsImage"];
				/*
				if(tempDate){
					var temp:Array 		 = tempDate.split('-');
					_day.selectedIndex 	 = parseInt(temp[2]);
					_month.selectedIndex = parseInt(temp[1]);
					_year.selectedIndex  = ConstantData.FindYearindex(temp[0]);
				}else{
					_day.selectedIndex 		= 0;
					_month.selectedIndex 	= 0;
					_year.selectedIndex 	= 0;
				}*/
			}
			
			private function forceImports():void{
				Catalogs;
			}
			
			public function initView():void{
				forceImports();
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = ["_idCliente","_idDireccion"];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
				addValidations();						
			}
			
			public function imageUploadReady(data:Object):void{
				
			}

			// ------------------- View Extra Data -------------------------------			

			private function initData():void{
				_MainService.getFields();
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_dataReady = false;
			}
			
			public function closeWindow():void{
            		dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
            		PopUpManager.removePopUp(this);
            }
            
//-------------------------------- MainInit --------------------------------------
			
			private function newData():void{
				_Data.clear();
				_newData = true;
				_updateData = false;				
				this[_mainFocusField].setFocus();
				createRecordExtras();
				Valid.validateAll();
			}
			
			
			private function importData(item:String):void{
				switch(item){
					
						
					case "direccion":
						_calle.text 			= _dataObject._calle;
						_numeroExterior.text 	= _dataObject._numeroExterior;
						_numeroInterior.text 	= _dataObject._numeroInterior;
						_cp.text 				= _dataObject._cp;
						_colonia.text 			= _dataObject._colonia;
						_estado.selectedIndex 	= _dataObject._estado;
						_ciudad.text 			= _dataObject._ciudad;
						break;
					
				}
				dataChange();
			}
			
			private function createData():void{
				if(Valid.validateAll()){
					_dataReady = false;					
					var params:Object = extraCreateData(_Data.makeData());
					_MainService.createRecord(params);
					_MainService.createRecord.addEventListener(ResultEvent.RESULT,onCreateComplete);
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}

			private function updateData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraUpdateData(_Data.makeData());
					params[_mainId] = this[_mainId];
					_MainService.updateRecord(params);
					_MainService.updateRecord.addEventListener(ResultEvent.RESULT,onUpdateComplete);					
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function cancel():void{				
				resetBooleans();
				Valid.validateAll();
			}
			
			private function resetBooleans():void{
				_newData = false;
				_updateData = false;
			}

			private function dataChange():void{
				_updateData = true;
			}
			
			
			
			
			
			
//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
						getData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataResult= new ArrayCollection();								
			}
			
			private function getData():void{
//-------->			
				var params:Object = new Object();
				params[_relationId] = this[_relationId];  
				_MainService.getRecordsById(params);
				_MainService.getRecordsById.addEventListener(ResultEvent.RESULT,onGetDataResult);
			}
			
			private function onGetDataResult(e:ResultEvent):void{
				_MainService.getRecordsById.removeEventListener(ResultEvent.RESULT,onGetDataResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No hay datos para este registro...\nCrear un registro nuevo?","Atención",Alert.OK|Alert.NO,this,alertNewHandler);
				}else{			
					_Data.loadData(_DataResult[_dataIndex]);					
					loadExtraFields(_DataResult[_dataIndex]);
					this[_mainId] = _DataResult[_dataIndex][_mainId];
				}
				_dataReady = true;
				resetBooleans();			
			}
			
			private function alertNewHandler(e:CloseEvent):void{
				if(e.detail == Alert.OK){
					newData()
				}
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}			
			
			private function onCreateComplete(e:ResultEvent):void{				
				_MainService.createRecord.removeEventListener(ResultEvent.RESULT,onCreateComplete);
				_dataIndex = 0;
				_workManager.getData();
				getData();
			}
			
			private function onUpdateComplete(e:ResultEvent):void{
				_MainService.updateRecord.removeEventListener(ResultEvent.RESULT,onUpdateComplete);
				_workManager.getData();
				getData();
			}					
			
//-------------------------------- ResultsEvents --------------------------------------	

//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean=false):void{
				var pop:TitleWindow = PopUpManager.createPopUp(this, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
				pop.name = popUpName;
				pop.addEventListener(CloseEvent.CLOSE, closePopup);
				if(pop.hasOwnProperty("context")){
					Object(pop).context = viewContext;
				}
				PopUpManager.centerPopUp(pop);
			}
			
			private function closePopup(e:CloseEvent):void{
	            PopUpManager.removePopUp(e.target as TitleWindow);
			}
//-------------------------------- POP UP WINDOW --------------------------------------
				
			
		]]>
	</mx:Script>
<mx:Label x="78" y="10" text="Empresa :" textAlign="right"/>
<mx:TextInput x="148" y="10" change="dataChange();" width="496" text="{_nombreEmpresa}" editable="false"/>

	<mx:Button label="Cancelar" width="77" enabled="{_dataReady}" visible="{_newData||_updateData}" click="cancel();" x="232" y="402"/>
	<mx:Button label="Actualizar" width="78" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_updateData}" visible="{_updateData&amp;&amp;!_newData}" click="updateData();" x="149" y="402"/>
	<mx:Button label="Regresar" click="closeWindow();" width="217"  enabled="{!_newData}" x="427" y="402"/>
	<mx:Button label="Aceptar" width="78" enabled="{_dataReady}" visible="{_newData}" click="createData();" x="149" y="402"/>
	<mx:Label x="149" y="103" text="calle"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:Label x="149" y="144" text="ciudad"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:Label x="473" y="146" text="estado"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:Label x="475" y="103" text="número"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:Label x="146" y="231" text=" plano"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:TextInput x="475" y="119" id="_numeroExterior" change="dataChange();" width="48" maxChars="10" tabIndex="8" restrict="0-9"/>
	<mx:Label x="532" y="103" text="interior"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:Label x="578.5" y="103" text="c.p."  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:Label x="78" y="121" text="Dirección :" />
	<mx:Label x="53" y="249" text="Coordenadas :" />
	<mx:Label x="46" y="348" text="Observaciones :" />
	<mx:TextInput x="149" y="119" id="_calle" change="dataChange();" width="314" maxChars="255" tabIndex="7"/>
	<mx:Label x="149" y="190" text="entre calles"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:Label x="149" y="277" text="referencias"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:TextInput x="149" y="206" id="_entreCalles" change="dataChange();" width="495" maxChars="255" tabIndex="7"/>
	<mx:TextInput x="149" y="247" id="_pagina" change="dataChange();" width="48" maxChars="10" tabIndex="8" restrict="0-9"/>
	<mx:Label x="205" y="231" text="letra"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:TextInput x="205" y="247" id="_ejeA" change="dataChange();" width="48" maxChars="10" tabIndex="8" restrict="A-Z"/>
	<mx:Label x="261" y="231" text="número"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:TextInput x="261" y="247" id="_ejeB" change="dataChange();" width="48" maxChars="10" tabIndex="8" restrict="0-9"/>
	<mx:TextInput x="531" y="119" id="_numeroInterior" change="dataChange();" width="40" maxChars="5" tabIndex="9" restrict="0-9 A-Z "/>
	<mx:TextInput x="579" y="119" id="_cp" change="dataChange();" width="65" restrict="0-9" maxChars="5" tabIndex="10"/>
	<mx:TextInput x="149" y="160" id="_ciudad" change="dataChange();" width="152" tabIndex="11"/>
	<mx:ComboBox  x="475" y="162" id="_estado" change="dataChange();" width="125.5" dataProvider="{ConstantData.NationalStates}" labelField="label" tabIndex="13"/>
	<mx:Label x="310" y="144" text="colonia"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:TextInput x="309" y="160" id="_colonia" change="dataChange();" width="152" tabIndex="11" restrict="A-Z "/>
	<mx:Button x="652" y="118" click="importData(&quot;direccion&quot;);">
		<mx:icon>@Embed(source='../../assets/Icons/Buttons/LiberarSalida.png')</mx:icon>
	</mx:Button>
	<mx:TextArea x="149" y="296" width="495" id="_referencia"/>
	<mx:TextArea x="149" y="348" width="495" id="_observaciones"/>
	<mx:Label x="22" y="75" text="Dia de Recolección :" />
	<mx:Label x="148" y="56" text="mínimo"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:Label x="231" y="56" text="máximo"  fontSize="9" color="#CECECE" fontStyle="italic"/>
	<mx:NumericStepper x="148" y="73" id="_diaMin" value="1" minimum="1" maximum="31" stepSize="1"/>
	<mx:NumericStepper x="231" y="73" id="_diaMax" value="1" minimum="1" maximum="31" stepSize="1"/>
	
</mx:TitleWindow>
