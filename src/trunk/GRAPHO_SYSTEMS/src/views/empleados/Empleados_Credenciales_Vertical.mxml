<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="698" height="608" 
	layout="absolute" 
	horizontalCenter="0" 
	title="Administración de Credenciales" 
	verticalCenter="0"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	showCloseButton="true">

	<mx:Script>
		<![CDATA[
			import mx.random.cms.PathData;
			import views.credenciales.CRED_FTE;
			import mx.printing.FlexPrintJobScaleType;
			import mx.printing.FlexPrintJob;
			import mx.random.constants.ConstantData;
			
			import mx.random.constants.Catalogs;
			import mx.random.windowManagers.PopManager;
			import mx.random.constants.Languages;
			import mx.random.forms.Validator;
			import mx.random.dataManagers.EventManager;
			import mx.random.cms.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.cms.web.WebApplication;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.rpc.remoting.RemoteObject;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import mx.core.UIComponent;
			import mx.random.xml.XMLDataManager;
			import mx.random.drawing.XMLSignDrawing;

			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 		= new RemoteObject();
[Bindable]	private var _Data:DataManager 				= new DataManager(this);
[Bindable]	private var _DataResult:ArrayCollection 		= new ArrayCollection();			
			private var _eventManager:EventManager 		= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------

[Bindable]	public var _dataReady:Boolean 			= false;
[Bindable]	public var _newData:Boolean 			= false;
[Bindable]	public var _updateData:Boolean 			= false;

			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number 			= 0;
			private var _selectedName:String 		= "";
			private var _serviceName  			= "Credenciales";
			private var _mainId  				= "_idCredencial";
			private var _relationId  			= "_idEmpleado";
			private var _mainFocusField:String  = "_idEstatusCredencial";
//<------->			
			private var _idCredencial:Number = 0;
			private var _idEmpleado:Number = 0;
[Bindable]	private var _dataObject:Object;
[Bindable]	private var _extraData:Object;
[Bindable]	private var _mainPath:String 	= PathData.HOST+"/";
[Bindable]	private var _picturePath:String = "PRM_Data/_empleados/";
[Bindable]	private var _barCodePath:String = "PRM_Data/_codigos/";
[Bindable]	private var _signsPath:String 	= "PRM_Data/_firmas/";
[Bindable]	private var _barCode:String 	= "";
[Bindable]	private var _barCodeImage:String= "../assets/Comps/noimage.png";
[Bindable]	private var _tipoSangre:String;
			private var _XMLSign:XMLSignDrawing = new XMLSignDrawing();			
			private var _loader:URLLoader = new URLLoader();

[Bindable]	private var _area:String = "";
[Bindable]	private var _puesto:String = "";



			public function set relationIdValue(value:Number):void { _idEmpleado = value }
			public function set dataObject(value:Object):void { _dataObject = value }
			public function set extraData(value:Object):void { _extraData = value }
			
			public function set area(value:String):void{
				_area = Converter.strReplace("","SUBDIRECCION DE ",value);
			}
			
			public function set puesto(value:String):void{
				_puesto = value;
			}
			
			//-----------Local Vars -----------
			
//---------------------------- Context ---------------------------------------------            

   			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
				initView();
			}

			public function set workManager(value:Object):void{
				_workManager = value;
			}

			public function set webApplication(value:WebApplication):void{
				_webApplication = value;
				
			}
			public function get webApplication():WebApplication{ return _webApplication; } 
						
//---------------------------- Context ---------------------------------------------  

//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				return {webApplication: _webApplication,
						workManager: this
						}					
			}

			private function addValidations():void{
				Valid.changeLanguage(Languages.SPANISH);
							


				var validFields:ArrayCollection = Valid.validFields;
				for(var n:Number = 0;n<validFields.length;n++){					
					this[validFields[n].obj.name].addEventListener(Event.CHANGE,onFocusOut);
				}
				Valid.setErrorKnot(Validator.CIRCLE_KNOT,0xFF0000);
			}

			private function onFocusOut(e:Event):void{
				if(_newData||_updateData) Valid.validateAll();//Valid.validateOne(e.currentTarget.name);
			}
			
			private function extraCreateData(params:Object):Object{
				params[_relationId] = this[_relationId];
				//params["_newsImage"] = _image;
				//params['_fechaNacimiento'] 	= _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;
				return params;
			}
			
			private function createRecordExtras():void{
				//_image = "defaultNew.jpg";
				/*_day.selectedIndex 	= 0;
				_month.selectedIndex 	= 0;
				_year.selectedIndex 	= 0;*/
			}
			
			private function extraUpdateData(params:Object):Object{	
				//params['_fechaNacimiento'] = _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;			
				return params;
			}
			
			private function loadExtraFields(params:Object):void{
				_barCode = params["_barCode"];
				/*
				if(tempDate){
					var temp:Array 		 = tempDate.split('-');
					_day.selectedIndex 	 = parseInt(temp[2]);
					_month.selectedIndex = parseInt(temp[1]);
					_year.selectedIndex  = ConstantData.FindYearindex(temp[0]);
				}else{
					_day.selectedIndex 		= 0;
					_month.selectedIndex 	= 0;
					_year.selectedIndex 	= 0;
				}*/
			}
			
			private function forceImports():void{
				Catalogs;
			}
			
			public function initView():void{				
				forceImports();
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = ["_idCredencial","_idEmpleado","_barCode","_idEstatusCredencial"];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
				addValidations();	
				//picture.mask = pictureMask;	
				//frontCredential.mask = frontMask;
				//backCredential.mask = backMask;	
				_tipoSangre = ConstantData.BloodTypes[_dataObject._tipoSangre].label;							
			}
			
			public function imageUploadReady(data:Object):void{
				
			}

			// ------------------- View Extra Data -------------------------------			

			private function initData():void{
				_MainService.getFields();
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_dataReady = false;
			}
			
			public function closeWindow():void{
            		dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
            		PopUpManager.removePopUp(this);
            }
            
//-------------------------------- MainInit --------------------------------------
			
			private function newData():void{
				_Data.clear();
				_newData = true;
				_updateData = false;				
				//this[_mainFocusField].setFocus();
				createRecordExtras();
				Valid.validateAll();
			}
			
			private function createData():void{
				if(Valid.validateAll()){
					_dataReady = false;					
					var params:Object = extraCreateData(_Data.makeData());
					_MainService.createRecord(params);
					_MainService.createRecord.addEventListener(ResultEvent.RESULT,onCreateComplete);
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}

			private function updateData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraUpdateData(_Data.makeData());
					params[_mainId] = this[_mainId];
					_MainService.updateRecord(params);
					_MainService.updateRecord.addEventListener(ResultEvent.RESULT,onUpdateComplete);					
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function cancel():void{				
				resetBooleans();
				Valid.validateAll();
			}
			
			private function resetBooleans():void{
				_newData = false;
				_updateData = false;
			}

			private function dataChange():void{
				_updateData = true;
			}
			
//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
						getData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataResult= new ArrayCollection();								
			}
			
			private function getData():void{
//-------->			
				var params:Object = new Object();
				params[_relationId] = this[_relationId];
				_MainService.getRecords(this[_relationId]);
				_MainService.getRecords.addEventListener(ResultEvent.RESULT,onGetDataResult);
			}
			
			private function onGetDataResult(e:ResultEvent):void{
				_MainService.getRecords.removeEventListener(ResultEvent.RESULT,onGetDataResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No hay datos para este registro...\nCrear un registro nuevo?","Atención",Alert.OK|Alert.NO,this,alertNewHandler);
				}else{			
					_Data.loadData(_DataResult[_dataIndex]);					
					loadExtraFields(_DataResult[_dataIndex]);
					this[_mainId] = _DataResult[_dataIndex][_mainId];
					_barCodeImage = _mainPath+_barCodePath+_barCode+".jpg?id="+Math.random();
					loadSign();
				}
				_dataReady = true;
				resetBooleans();
			}
			
			private function alertNewHandler(e:CloseEvent):void{
				if(e.detail == Alert.OK){
					newData()
				}
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}			
			
			private function onCreateComplete(e:ResultEvent):void{				
				_MainService.createRecord.removeEventListener(ResultEvent.RESULT,onCreateComplete);
				_dataIndex = 0;
				getData();
			}
			
			private function onUpdateComplete(e:ResultEvent):void{
				_MainService.updateRecord.removeEventListener(ResultEvent.RESULT,onUpdateComplete);
				getData();
			}					
			
//-------------------------------- ResultsEvents --------------------------------------	

//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean=false):void{
				var pop:TitleWindow = PopUpManager.createPopUp(this, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
				pop.name = popUpName;
				pop.addEventListener(CloseEvent.CLOSE, closePopup);
				if(pop.hasOwnProperty("context")){
					Object(pop).context = viewContext;
				}
				PopUpManager.centerPopUp(pop);
			}
			
			private function closePopup(e:CloseEvent):void{
	            PopUpManager.removePopUp(e.target as TitleWindow);
			}
//-------------------------------- POP UP WINDOW --------------------------------------

			private function loadSign():void{	
				if(Converter.bool(_extraData._tieneFirma))	{					
					_loader.load(new URLRequest(_mainPath+_signsPath+_dataObject._idEmpleado+".xml"));
					_loader.addEventListener(Event.COMPLETE,onLoadComplete);
				}
			}
			
			private function onLoadComplete(e:Event):void{
				_loader.removeEventListener(Event.COMPLETE,onLoadComplete);	
				_XMLSign.doSign(new XML(_loader.data),0.6);				
				signCanvas.addChild(_XMLSign);				
			}	
			
			
			
			
			private var _printJob:FlexPrintJob;
			private function printFTE():void{
				_printJob = new FlexPrintJob();
				if(_printJob.start()) {
					credFTE.verticalScrollPolicy = "off";
					credFTE.horizontalScrollPolicy="off";
					credFTE.setStyle("backgroundColor","#FFFFFF");
					credFTE.setStyle("borderColor","#FFFFFF");	
		            _printJob.addObject(credFTE,FlexPrintJobScaleType.MATCH_HEIGHT);
		            _printJob.send();	            		           
			   }
			}
			
			private function printVTA():void{
				_printJob = new FlexPrintJob();
				if(_printJob.start()) {
					credVTA.verticalScrollPolicy = "off";
					credVTA.horizontalScrollPolicy="off";
					credVTA.setStyle("backgroundColor","#FFFFFF");
					credVTA.setStyle("borderColor","#FFFFFF");	
		            _printJob.addObject(credVTA,FlexPrintJobScaleType.MATCH_HEIGHT);
		            _printJob.send();	            		           
			   }
			}
			
			
		]]>
	</mx:Script>

	<mx:Button label="Cancelar" width="80" enabled="{_dataReady}" visible="{_newData||_updateData}" click="cancel();" x="206" y="546"/>
	<mx:Button label="Actualizar" width="80" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_updateData}" visible="{_updateData&amp;&amp;!_newData}" click="updateData();" x="118" y="546"/>
	<mx:Button label="Regresar" click="closeWindow();" width="145"  enabled="{!_newData}" x="535" y="546"/>
	<mx:Button label="Aceptar" width="80" enabled="{_dataReady}" visible="{_newData}" click="createData();" x="30" y="546"/>
	<mx:Button x="199" y="17" label="Imprimir Frente" width="142" click="printFTE();"/>
	<mx:Button x="538" y="17" label="Imprimir Vuelta" width="142" click="printVTA();"/>
	<mx:Canvas x="30" y="48" width="311" height="490" id="credFTE" clipContent="true">
		<mx:Image x="0" y="0" width="311" height="490" autoLoad="true" scaleContent="true" source="@Embed(source='assets/Comps/FTE_CREDV.jpg')" brokenImageBorderSkin="@Embed(source='../assets/Comps/FTE_CREDV.jpg')" id="frontCredential"/>
		<mx:Label y="344" text="{_dataObject._nombre}" width="290" fontFamily="Arial" fontSize="15" color="#FFFFFF" fontWeight="bold" textAlign="center" horizontalCenter="0"/>
		<mx:Label y="365" text="{_dataObject._paterno+' '+_dataObject._materno}" width="290" fontFamily="Arial" fontSize="15" color="#FFFFFF" fontWeight="bold" textAlign="center" horizontalCenter="0"/>
		<mx:Label y="398" text="{_puesto}" width="290" fontFamily="Arial" fontSize="13" color="#FFFFFF" fontWeight="bold" textAlign="center" horizontalCenter="0"/>
		<mx:Label y="107" text="{_area}" width="291" fontFamily="Arial" fontSize="22" color="#FFFFFF" fontWeight="bold" textAlign="center" horizontalCenter="0"/>
		<mx:Image y="140" width="160.22052" height="197" source="{_mainPath+_picturePath+_dataObject._idEmpleado}.jpg" brokenImageBorderSkin="@Embed(source='../assets/Comps/fotoChB.jpg')" autoLoad="true" id="picture" horizontalCenter="-1"/>
	</mx:Canvas>
	<mx:Canvas x="369" y="48" width="311" height="490" id="credVTA" clipContent="true" verticalScrollPolicy="off" horizontalScrollPolicy="off">
		<mx:Image x="0" y="0" width="311" height="490" autoLoad="true" scaleContent="true" source="@Embed(source='assets/Comps/VTA_CREDV.jpg')" brokenImageBorderSkin="@Embed(source='../assets/Comps/VTA_CREDV.jpg')" id="backCredencial"/>
		<mx:Label x="8" y="239" text="{_tipoSangre}" width="72" fontFamily="Arial" fontSize="11" color="#000000" fontWeight="bold" textAlign="left" paddingLeft="0"/>
		<mx:Label x="112" y="239" text="{_dataObject._alergias}" width="189" fontFamily="Arial" fontSize="11" color="#000000" fontWeight="bold" paddingLeft="0" height="20"/>
		<mx:Label x="8" y="312" text="{_dataObject._telEme}" width="293" fontFamily="Arial" fontSize="11" color="#000000" fontWeight="bold" textAlign="left" paddingLeft="0" height="20"/>
		<mx:Label x="7" y="274" text="{_dataObject._emergencia}" width="294" fontFamily="Arial" fontSize="11" color="#000000" fontWeight="bold" textAlign="left" paddingLeft="0" height="20"/>
		<mx:Image x="34.5" y="402" width="249.5" height="24.319149" source="{_barCodeImage}" scaleContent="true" autoLoad="true" id="bc" brokenImageSkin="@Embed(source='../assets/Comps/dot.png')"/>
		<mx:Label x="113.65" y="200" text="{_dataObject._curp}" width="187.35" fontFamily="Arial" fontSize="11" color="#000000" fontWeight="bold" paddingLeft="0" height="20"/>
		<mx:Label x="8" y="200" text="{_dataObject._imss}" width="97" fontFamily="Arial" fontSize="11" color="#000000" fontWeight="bold" textAlign="left" paddingLeft="0"/>
		<mx:Canvas x="25.05" y="322" width="58.949997" height="43" id="signCanvas"></mx:Canvas>
		<mx:Text x="8" y="128" text="{_dataObject._calle+' '+_dataObject._numero+', '+_dataObject._colonia+', '+_dataObject._municipio+', '+_dataObject._estado}" width="297" height="60" fontFamily="Arial" fontSize="11" fontWeight="bold" color="#000000"/>
	</mx:Canvas>
	
</mx:TitleWindow>
