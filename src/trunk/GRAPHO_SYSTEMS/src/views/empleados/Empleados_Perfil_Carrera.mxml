<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="336" height="462" 
	layout="absolute" 
	horizontalCenter="0" 
	title="Perfil de Carrera" 
	verticalCenter="0"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	showCloseButton="true">

	<mx:Script>
		<![CDATA[
			import mx.random.prm.Perfiles;
			
			import mx.random.constants.Catalogs;
			import mx.random.windowManagers.PopManager;
			import mx.random.constants.Languages;
			import mx.random.forms.Validator;
			import mx.random.dataManagers.EventManager;
			import mx.random.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.web.WebApplication;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.rpc.remoting.RemoteObject;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 		= new RemoteObject();
[Bindable]	private var _Data:DataManager 				= new DataManager(this);
[Bindable]	private var _DataResult:ArrayCollection 		= new ArrayCollection();			
			private var _eventManager:EventManager 		= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------

[Bindable]	public var _dataReady:Boolean 			= false;
[Bindable]	public var _newData:Boolean 			= false;
[Bindable]	public var _updateData:Boolean 			= false;

			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number 			= 0;
			private var _selectedName:String 		= "";
			private var _serviceName  			= "PerfilCarrera";
			private var _mainId  				= "_idPerfil";
			private var _relationId  			= "_idEmpleado";
			private var _mainFocusField:String  = "_idPerfil_1";
//<------->			
			private var _idPerfil:Number = 0;
			private var _idEmpleado:Number = 0;

			public function set relationIdValue(value:Number):void { _idEmpleado = value }
			
			//-----------Local Vars -----------
			
//---------------------------- Context ---------------------------------------------            

   			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
			}

			public function set workManager(value:Object):void{
				_workManager = value;
			}

			public function set webApplication(value:WebApplication):void{
				_webApplication = value;
				initView();
			}
			public function get webApplication():WebApplication{ return _webApplication; } 
						
//---------------------------- Context ---------------------------------------------  

//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				return {webApplication: _webApplication,
						workManager: this
						}					
			}

			private function addValidations():void{
				Valid.changeLanguage(Languages.SPANISH);
				Valid.addComboVal(_idPerfil_1,"Perfil 1");				
				Valid.addComboVal(_idPerfil_2,"Perfil 3");			
				Valid.addComboVal(_idPerfil_3,"Perfil 3");

				var validFields:ArrayCollection = Valid.validFields;
				for(var n:Number = 0;n<validFields.length;n++){					
					this[validFields[n].obj.name].addEventListener(Event.CHANGE,onFocusOut);
				}
				Valid.setErrorKnot(Validator.CIRCLE_KNOT,0xFF0000);
			}

			private function onFocusOut(e:Event):void{
				if(_newData||_updateData) Valid.validateAll();//Valid.validateOne(e.currentTarget.name);
			}
			
			private function extraCreateData(params:Object):Object{
				params[_relationId] = this[_relationId];
				//params["_newsImage"] = _image;
				//params['_fechaNacimiento'] 	= _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;
				return params;
			}
			
			private function createRecordExtras():void{
				//_image = "defaultNew.jpg";
				/*_day.selectedIndex 	= 0;
				_month.selectedIndex 	= 0;
				_year.selectedIndex 	= 0;*/
			}
			
			private function extraUpdateData(params:Object):Object{	
				//params['_fechaNacimiento'] = _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;			
				return params;
			}
			
			private function loadExtraFields(params:Object):void{
				//_image = params["_newsImage"];
				/*
				if(tempDate){
					var temp:Array 		 = tempDate.split('-');
					_day.selectedIndex 	 = parseInt(temp[2]);
					_month.selectedIndex = parseInt(temp[1]);
					_year.selectedIndex  = ConstantData.FindYearindex(temp[0]);
				}else{
					_day.selectedIndex 		= 0;
					_month.selectedIndex 	= 0;
					_year.selectedIndex 	= 0;
				}*/
			}
			
			private function forceImports():void{
				Catalogs;
			}
			
			public function initView():void{
				forceImports();
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = ["_idPerfil","_idEmpleado"];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
				addValidations();				
			}
			
			public function imageUploadReady(data:Object):void{
				
			}

			// ------------------- View Extra Data -------------------------------			

			private function initData():void{
				_MainService.getFields();
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_dataReady = false;
			}
			
			public function closeWindow():void{
            		dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
            		PopUpManager.removePopUp(this);
            }
            
//-------------------------------- MainInit --------------------------------------
			
			private function newData():void{
				_Data.clear();
				_newData = true;
				_updateData = false;				
				this[_mainFocusField].setFocus();
				createRecordExtras();
				Valid.validateAll();
			}
			
			private function createData():void{
				if(Valid.validateAll()){
					_dataReady = false;					
					var params:Object = extraCreateData(_Data.makeData());
					_MainService.createRecord(params);
					_MainService.createRecord.addEventListener(ResultEvent.RESULT,onCreateComplete);
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}

			private function updateData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraUpdateData(_Data.makeData());
					params[_mainId] = this[_mainId];
					_MainService.updateRecord(params);
					_MainService.updateRecord.addEventListener(ResultEvent.RESULT,onUpdateComplete);					
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function cancel():void{				
				resetBooleans();
				Valid.validateAll();
			}
			
			private function resetBooleans():void{
				_newData = false;
				_updateData = false;
			}

			private function dataChange():void{
				_updateData = true;
			}
			
//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
						getData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataResult= new ArrayCollection();								
			}
			
			private function getData():void{
//-------->			
				var params:Object = new Object();
				params[_relationId] = this[_relationId];
				_MainService.getRecords(this[_relationId]);
				_MainService.getRecords.addEventListener(ResultEvent.RESULT,onGetDataResult);
			}
			
			private function onGetDataResult(e:ResultEvent):void{
				_MainService.getRecords.removeEventListener(ResultEvent.RESULT,onGetDataResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No hay datos para este registro...\nCrear un registro nuevo?","AtenciÃ³n",Alert.OK|Alert.NO,this,alertNewHandler);
				}else{			
					_Data.loadData(_DataResult[_dataIndex]);					
					loadExtraFields(_DataResult[_dataIndex]);
					this[_mainId] = _DataResult[_dataIndex][_mainId];
				}
				_dataReady = true;
				resetBooleans();
			}
			
			private function alertNewHandler(e:CloseEvent):void{
				if(e.detail == Alert.OK){
					newData()
				}
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}			
			
			private function onCreateComplete(e:ResultEvent):void{				
				_MainService.createRecord.removeEventListener(ResultEvent.RESULT,onCreateComplete);
				_dataIndex = 0;
				getData();
			}
			
			private function onUpdateComplete(e:ResultEvent):void{
				_MainService.updateRecord.removeEventListener(ResultEvent.RESULT,onUpdateComplete);
				getData();
			}					
			
//-------------------------------- ResultsEvents --------------------------------------	

//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean=false):void{
				var pop:TitleWindow = PopUpManager.createPopUp(this, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
				pop.name = popUpName;
				pop.addEventListener(CloseEvent.CLOSE, closePopup);
				if(pop.hasOwnProperty("context")){
					Object(pop).context = viewContext;
				}
				PopUpManager.centerPopUp(pop);
			}
			
			private function closePopup(e:CloseEvent):void{
	            PopUpManager.removePopUp(e.target as TitleWindow);
			}
//-------------------------------- POP UP WINDOW --------------------------------------
				
			
		]]>
	</mx:Script>
	<mx:Label x="29" y="28" text="Perfiles :" textAlign="right"/>
<mx:ComboBox  x="90" y="26" id="_idPerfil_1" change="dataChange();" width="160" dataProvider="{Perfiles.ProfileTypes}" labelField="label"/>
<mx:NumericStepper x="258" y="26" id="_prcPerfil_1" change="dataChange();" width="60" minimum="0" maximum="100" stepSize="1" value="0"/>
<mx:Label x="90" y="10" text="prefil 1" textAlign="left" fontSize="9" color="#C1C1C1" fontStyle="italic"/>
	<mx:Label x="258" y="10" text="%" textAlign="left" fontSize="9" color="#C1C1C1" fontStyle="italic"/>
	<mx:Label x="258" y="139" text="%" textAlign="left" fontSize="9" color="#C1C1C1" fontStyle="italic"/>
	<mx:Label x="258" y="268" text="%" textAlign="left" fontSize="9" color="#C1C1C1" fontStyle="italic"/>
	<mx:Label x="90" y="139" text="prefil 2" textAlign="left" fontSize="9" color="#C1C1C1" fontStyle="italic"/>
	<mx:Label x="90" y="268" text="prefil 3" textAlign="left" fontSize="9" color="#C1C1C1" fontStyle="italic"/>
<mx:ComboBox  x="90" y="155" id="_idPerfil_2" change="dataChange();" width="160" dataProvider="{Perfiles.ProfileTypes}" labelField="label"/>
<mx:NumericStepper x="258" y="155" id="_prcPefil_2" change="dataChange();" width="60" minimum="0" maximum="100" stepSize="1" value="0"/>
<mx:ComboBox  x="90" y="286" id="_idPerfil_3" change="dataChange();" width="160" dataProvider="{Perfiles.ProfileTypes}" labelField="label"/>
<mx:NumericStepper x="258" y="286" id="_prcPerfil_3" change="dataChange();" width="60" minimum="0" maximum="100" stepSize="1" value="0"/>

	<mx:Button label="Cancelar" width="80" enabled="{_dataReady}" visible="{_newData||_updateData}" click="cancel();" x="98" y="399"/>
	<mx:Button label="Actualizar" width="80" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_updateData}" visible="{_updateData&amp;&amp;!_newData}" click="updateData();" x="10" y="399"/>
	<mx:Button label="Regresar" click="closeWindow();" width="132"  enabled="{!_newData}" x="186" y="399"/>
	<mx:Button label="Aceptar" width="80" enabled="{_dataReady}" visible="{_newData}" click="createData();" x="10" y="399"/>
	<mx:TextArea x="90" y="56" width="228" text="{_idPerfil_1.selectedItem.desc}" height="75"/>
	<mx:TextArea x="90" y="185" width="228" text="{_idPerfil_2.selectedItem.desc}" height="75"/>
	<mx:TextArea x="90" y="316" width="228" text="{_idPerfil_3.selectedItem.desc}" height="75"/>
	
</mx:TitleWindow>
