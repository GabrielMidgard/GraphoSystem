<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	width="1238" height="572"  
	horizontalCenter="0" 
	title="Administración de Grupos de Cobro" 
	>

	
	<s:Label x="19" y="14" text="Nombre :" />
<s:TextInput x="77" y="10" id="_nombre" change="dataChange();" width="265" tabIndex="1"/>

	<s:DataGrid height="414" dataProvider="{_DataResult}" id="_dataList" selectionChange="onDataSelect();" selectionMode="singleRow" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;!_updateData}" width="332" x="10" y="70">
		<s:columns>	
			<s:ArrayList>
				<s:GridColumn headerText="Id" dataField="_idGrupoCobro" width="40"> </s:GridColumn>	
				<s:GridColumn headerText="Nombre" dataField="_nombre"> </s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	<s:DataGrid id="_testResult" x="750" y="99" width="475" height="387" dataProvider="{_testData}"
				selectionMode="singleRow">
		<s:columns>	
			<s:ArrayList>
				<s:GridColumn headerText="Nombre" dataField="_nombre" width="180"> </s:GridColumn>
				<s:GridColumn headerText="Val" 	 dataField="_valor" width="60"> 
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<s:Label id="labelDisplay" textAlign="right" right="3" height="100%" verticalAlign="middle"/>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
				<s:GridColumn headerText="Resta" dataField="_cargo" width="55"> 
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<s:Label id="labelDisplay" textAlign="right" right="3" height="100%" verticalAlign="middle"/>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
				<s:GridColumn headerText="Suma" dataField="_abono" width="55"> 
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<s:Label id="labelDisplay" textAlign="right" right="3" height="100%" verticalAlign="middle"/>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
				<s:GridColumn headerText="Extra" dataField="_extra" width="55">
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<s:Label id="labelDisplay" textAlign="right" color="0xFF0000" right="3" height="100%" verticalAlign="middle"/>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
				<s:GridColumn headerText="Costo" dataField="_costo" width="55"> 
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								<s:Label id="labelDisplay" textAlign="right" fontWeight="bold" right="3" height="100%" verticalAlign="middle"/>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	<s:Button label="Nuevo" width="80" enabled="{_dataReady}" visible="{!_newData&amp;&amp;!_updateData}" click="newData();" x="10" y="492"/>
	<s:Button label="Cancelar" width="80" enabled="{_dataReady}" visible="{_newData||_updateData}" click="cancel();" x="98" y="492"/>
	<s:Button label="Aceptar" width="80" enabled="{_dataReady}" visible="{_newData}" click="createData();" x="10" y="492"/>
	<s:Button label="Eliminar" width="80" enabled="{_dataReady&amp;&amp;!_newData}" visible="{!_newData&amp;&amp;!_updateData}" click="deleteDataAlert();" x="98" y="492"/>
	<s:Button label="Actualizar" width="80" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_updateData}" visible="{_updateData&amp;&amp;!_newData}" click="updateData();" x="10" y="492"/>
	<s:Button label="Regresar" click="closeWindow();" width="145"  enabled="{!_newData}" x="1081" y="494"/>

	<s:ComboBox 	x="77" id="_searchType" 	dataProvider="{_searchTypes}" 	width="117" y="40" tabIndex="2"/>
	<s:TextInput 	x="202" id="_searchField" 	change="search();" 		width="140" enabled="{!_newData}" y="40" tabIndex="3"/>
	<s:Label x="10" text="Filtrar por :" textAlign="right" y="46"/>
	<s:Button x="350" y="490" width="30" height="23"
			  click="removeRuleAlert()"
			  icon="@Embed(source='../../assets/Icons/Buttons/Delete.png')"
			  skinClass="spark.skins.spark.ButtonSkin"/>
	<s:Button x="549" y="490" width="30" height="23"
			  click="openPopUp(&quot;productos.Productos_Reglas_Negocio&quot;,true);"
			  icon="@Embed(source='../../assets/Icons/Buttons/Edit.png')"
			  skinClass="spark.skins.spark.ButtonSkin"/>
	<s:Button x="986" y="68" width="88" height="23" label="Probar" click="testRule();"
			  icon="@Embed(source='../../assets/Icons/Buttons/Refresh.png')"
			  skinClass="spark.skins.spark.ButtonSkin"/>
	<s:List id="_rules" x="350" y="97" width="172" height="387" change="dataChange();"
			dataProvider="{_reglasNegocio}" dropEnabled="true" dragEnabled="true" labelField="_nombre"></s:List>
	<s:List x="549" y="99" width="187" height="387" dragEnabled="true" dataProvider="{SystemGlobals.PRODUCTOS_REGLAS_NEGOCIO}" labelField="_nombre"></s:List>
	<s:Label x="548" y="77" text="Reglas de Negocio Disponibles :"/>
	<s:Label x="351" y="77" text="Reglas de Negocio Aplicadas :"/>
	<s:Label x="388" y="497" text="Eliminar Regla"/>
	<s:Label x="587" y="497" text="Editar Reglas"/>
	<s:TextInput id="_idProducto" x="750" y="69" width="150" text="2-1121"/>
	<s:TextInput id="_precio" x="907" y="69" width="71" restrict="0-9 /." text="0"/>
	<s:Label x="750" y="35" fontStyle="italic" text="Ejemplo :"/>
	<s:Label x="750" y="55" text="Código Producto :"/>
	<s:Label x="908" y="55" text="Costo Fijo :"/>
	<s:Image x="525" y="193" source="@Embed(source='../../assets/Icons/Buttons/Exit.png')"/>
	<s:Image x="525" y="353" source="@Embed(source='../../assets/Icons/Buttons/Exit.png')"/>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.random.constants.Catalogs;
			import mx.random.constants.Languages;
			import mx.random.constants.SystemGlobals;
			import mx.random.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.dataManagers.EventManager;
			import mx.random.forms.Validator;
			import mx.random.web.WebApplication;
			import mx.random.windowManagers.PopManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 		= new RemoteObject();
			[Bindable]	private var _Data:DataManager 				= new DataManager(this);
			[Bindable]	private var _DataResult:ArrayCollection 		= new ArrayCollection();			
			private var _eventManager:EventManager 		= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------
			
			[Bindable]	public var _dataReady:Boolean 			= false;
			[Bindable]	public var _newData:Boolean 			= false;
			[Bindable]	public var _updateData:Boolean 			= false;
			
			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number 			= 0;
			private var _selectedName:String 		= "";
			private var _serviceName  				= "Productos_Grupos_Cobro";
			private var _mainId  					= "_idGrupoCobro";
			private var _mainFocusField:String      = "_nombre";
[Bindable]	private var _reglasNegocio:ArrayCollection	   = new ArrayCollection(); 
			
			//-----------Local Vars -----------
			
			//---------------------------- Context ---------------------------------------------            
			
			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
				initView();
			}
			
			public function set workManager(value:Object):void{
				_workManager = value;
			}
			
			public function set webApplication(value:WebApplication):void{
				_webApplication = value;				
			}
			public function get webApplication():WebApplication{ return _webApplication; } 
			
			//---------------------------- Context ---------------------------------------------  
			
			//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				return {webApplication: _webApplication,
					workManager: this
				}					
			}
			
			private function addValidations():void{
				Valid.changeLanguage(Languages.SPANISH);
				
				//----------- Validaciones ---------------------------
				Valid.addStringVal(_nombre,2,100,"Nombre");
				
				//----------- Validaciones ---------------------------
				var validFields:ArrayCollection = Valid.validFields;
				
				Valid.validateOnChange = true;
				Valid.setErrorKnot(Validator.CIRCLE_KNOT,0xFF0000);
			}
			
		
			private function extraCreateData(params:Object):Object{				
				params['_reglasNegocio'] = getRules();
				return params;
			}
			
			private function createRecordExtras():void{
				_reglasNegocio = new ArrayCollection();
			}
			
			private function extraUpdateData(params:Object):Object{	
				params['_reglasNegocio'] = getRules();			
				return params;
			}
			
			private function loadExtraFields(params:Object):void{	
				_reglasNegocio = new ArrayCollection();
				var rulesString = params['_reglasNegocio'].toString();
				if(rulesString!=''){
					var rules:Array =  rulesString.split('|');	
					for(var n:Number = 0;n<rules.length;n++){
						_reglasNegocio.addItem( SystemGlobals.PRODUCTOS_REGLAS_NEGOCIO[ Converter.findIndex(SystemGlobals.PRODUCTOS_REGLAS_NEGOCIO,'_idReglaNegocio',rules[n]) ] );
					}
				}
			}
			
			
			
			private function forceImports():void{
				
			}
			
			public function initView():void{
				forceImports();
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = ["_idGrupoCobro","_reglasNegocio","_aplicaDespues"];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
				addValidations();
				loadScroll();
				_searchType.selectedIndex = 1;
			}
			
			public function imageUploadReady(data:Object):void{
				
			}
			
			// ------------------- View Extra Data -------------------------------
			
			private function loadScroll():void{
				_dataList.visible = false;
				for(var n:Number = 0;n<100;n++){
					_DataResult.addItem({i:0});
				}
			}
			
			private function initData():void{
				_MainService.getFields();
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_dataReady = false;
			}
			
			public function closeWindow():void{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				PopUpManager.removePopUp(this);
			}
			
			//-------------------------------- MainInit --------------------------------------
			
			private function newData():void{
				_Data.clear();
				_newData = true;
				_updateData = false;
				Valid.validateAll();
				this[_mainFocusField].setFocus();
				createRecordExtras();
			}
			
			private function createData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraCreateData(_Data.makeData());
					_MainService.createRecord(params);
					_MainService.createRecord.addEventListener(ResultEvent.RESULT,onCreateComplete);
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function updateData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraUpdateData(_Data.makeData());
					params[_mainId] = _dataList.selectedItem[_mainId];
					_MainService.updateRecord(params);
					_MainService.updateRecord.addEventListener(ResultEvent.RESULT,onUpdateComplete);
					_dataIndex =_dataList.selectedIndex;
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function deleteDataAlert():void{
				if(_dataList.selectedIndex!=-1){
					Alert.show("Desea borrar el registro seleccionado?","Atención",Alert.YES|Alert.CANCEL,this,deleteData);
				}else{
					Alert.show("No hay registro selecionado","Error");
				}
			}
			
			private function deleteData(e:CloseEvent):void{
				if(e.detail==Alert.YES){
					var params:Object = new Object();
					params[_mainId] = _dataList.selectedItem[_mainId];
					_MainService.deleteRecord(params);
					_MainService.deleteRecord.addEventListener(ResultEvent.RESULT,onDeleteComplete);
					_dataReady = false;
				}
			}
			
			private function cancel():void{
				onDataSelect();
				resetBooleans();
				Valid.validateAll();
			}
			
			private function resetBooleans():void{
				_newData = false;
				_updateData = false;
			}
			
			private function dataChange():void{
				_updateData = true;
			}
			
			private function openImageEditor():void{
				if(_dataList.selectedIndex!=-1){
					//_newsIdNumber 	= new Number(_dataList.selectedItem._blogId);
					openPopUp("managers.ImageManager")
				}else{
					Alert.show("No hay registro selecionado","Error");
				}
			}
			//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
						getData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataResult= new ArrayCollection();
				_dataList.visible = true;
				
			}
			
			private function getData():void{
				_MainService.getRecords();
				_MainService.getRecords.addEventListener(ResultEvent.RESULT,onGetDataResult);
			}
			
			private function onGetDataResult(e:ResultEvent):void{
				_MainService.getRecords.removeEventListener(ResultEvent.RESULT,onGetDataResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No hay registros en la base de datos","Atención")
				}else{
					if(_dataIndex<0) _dataIndex = 0;
					_Data.loadData(_DataResult[_dataIndex]);
					_dataList.setSelectedIndex(_dataList.selectedIndex);
					loadExtraFields(_DataResult[_dataIndex]);
				}
				_dataReady = true;
				resetBooleans();
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}
			
			private function onDataSelect():void{
				if(_dataList.selectedIndex!=-1) {
					_Data.loadData(_dataList.selectedItem);
					_dataIndex =_dataList.selectedIndex;
					loadExtraFields(_dataList.selectedItem);
					_selectedId = _dataList.selectedItem[_mainId];
				}
			}
			
			private function onCreateComplete(e:ResultEvent):void{				
				_MainService.createRecord.removeEventListener(ResultEvent.RESULT,onCreateComplete);
				_dataIndex = _DataResult.length;
				Catalogs.reload();
				getData();
			}
			
			private function onUpdateComplete(e:ResultEvent):void{
				_MainService.updateRecord.removeEventListener(ResultEvent.RESULT,onUpdateComplete);
				Catalogs.reload();
				getData();
			}
			
			private function onDeleteComplete(e:ResultEvent):void{
				_MainService.deleteRecord.removeEventListener(ResultEvent.RESULT,onDeleteComplete);
				_dataIndex = _DataResult.length-2;
				Catalogs.reload();
				getData();
			}
			
			//-------------------------------- ResultsEvents --------------------------------------	
			
			//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean = true):void{
				var pop:TitleWindow = PopUpManager.createPopUp(this, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
				pop.name = popUpName;
				pop.addEventListener(CloseEvent.CLOSE, closePopup);
				if(pop.hasOwnProperty("context")){
					Object(pop).context = viewContext;
				}
				PopUpManager.centerPopUp(pop);
			}
			
			private function closePopup(e:CloseEvent):void{
				PopUpManager.removePopUp(e.target as TitleWindow);
			}
			//-------------------------------- POP UP WINDOW --------------------------------------
			
			//-------------------------------- Search Engine --------------------------------------
			
			private function searchFilter():void{
				_DataResult.filterFunction = vlidateSearch;
				_DataResult.refresh();
			}
			
			private function vlidateSearch(item:Object):Boolean{
				var isMatch:Boolean = false;           
				if(item[_searchType.selectedItem.value].toLowerCase().search(_searchFilter.toLowerCase()) != -1){
					isMatch = true
				}              
				return isMatch;              
			}
			
			private function search():void{
				_searchFilter = _searchField.text;
				searchFilter();
			}
			private var _searchFilter:String 			= new String();
			[Bindable]	private var _searchTypes:ArrayCollection 	= new ArrayCollection([{label:"Id",     	value:"_idGrupoCobro"},{label:"Nombre",     	value:"_nombre"}]);
			
			//-------------------------------- Search Engine --------------------------------------				
			
			
			private function getRules():String{
				var result:String = new String();
				for(var n:Number = 0;n<_reglasNegocio.length;n++){
					result += _reglasNegocio[n]._idReglaNegocio+"|";
				}			
				return result.slice(0,(result.length-1));
			}
			
			private function removeRuleAlert():void{
				if(_rules.selectedIndex!=-1){
					Alert.show("Eliminar regla?","Atención",Alert.YES|Alert.CANCEL,this,removeRule);	
				}else{
					Alert.show("No hay registro seleccionado","Error");
				}
			}
			
			private function removeRule(e:CloseEvent):void{
				if(e.detail==Alert.YES){
					_reglasNegocio.removeItemAt(_rules.selectedIndex);
					_rules.selectedIndex = -1;
				}
			}
			
[Bindable]	private var _testData:ArrayCollection = new ArrayCollection();
			
			private function testRule():void{
				_testData = new ArrayCollection();
				var params:Object = {
					_idGrupoCobro:_dataList.selectedItem._idGrupoCobro,
					_idProducto:_idProducto.text,
					_precio:_precio.text
				}
				_MainService.testRule(params);
				_MainService.testRule.addEventListener(ResultEvent.RESULT,onTestRuleReady); 
			}
			
			private function onTestRuleReady(e:ResultEvent):void{
				_MainService.testRule.addEventListener(ResultEvent.RESULT,onTestRuleReady); 
				_testData = Converter.arrayConverter(e.result);
			}
			
			
			
		]]>
	</fx:Script>
	
</s:TitleWindow>
