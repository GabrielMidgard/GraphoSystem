<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="454" height="520" 
	layout="absolute" 
	horizontalCenter="0" 
	title="Administración de Temas de Comunicación Interna" 
	verticalCenter="0"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	showCloseButton="true">

	<mx:Script>
		<![CDATA[
			import mx.random.constants.ConstantData;
			import mx.random.events.SelectionEvent;
			import mx.random.events.StaticEvent;
			
			import mx.random.constants.Catalogs;
			import mx.random.windowManagers.PopManager;
			import mx.random.constants.Languages;
			import mx.random.forms.Validator;
			import mx.random.dataManagers.EventManager;
			import mx.random.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.web.WebApplication;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.rpc.remoting.RemoteObject;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 		= new RemoteObject();
[Bindable]	private var _Data:DataManager 				= new DataManager(this);
[Bindable]	private var _DataResult:ArrayCollection 		= new ArrayCollection();			
			private var _eventManager:EventManager 		= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------

[Bindable]	public var _dataReady:Boolean 			= false;
[Bindable]	public var _newData:Boolean 			= false;
[Bindable]	public var _updateData:Boolean 			= false;
[Bindable]	private var _selectionMode:Boolean		= false;
[Bindable]	private var _multipleSelection:Boolean	= false;

			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number 			= 0;
			private var _selectedName:String 		= "";
			private var _serviceName  				= "Comunicaciones_Blog";
			private var _mainId  					= "_idBlog";
			private var _mainFocusField:String      = "_titulo";

			
			private var _idCliente:Number			= 0;
[Bindable]	private var _nombreCliente:String		= "";	
[Bindable]	private var _numeroCliente:String		= "";	
[Bindable]	private var _contratos:ArrayCollection = new ArrayCollection();	
			
			//-----------Local Vars -----------
			
			
			public function set idCliente(value:Number):void{
				_idCliente = value;
			}
			
			public function set numeroCliente(value:String):void{
				_numeroCliente = value;
			}
			
			public function set nombreCliente(value:String):void{
				_nombreCliente = value;
			}
			
//---------------------------- Context ---------------------------------------------            

   			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
				initView();
			}

			public function set workManager(value:Object):void{
				_workManager = value;
			}

			public function set selectionMode(value:Boolean):void{
				_selectionMode = value;
			}
			
			public function set multipleSelection(value:Boolean):void{
				_multipleSelection = value;
			}

			public function set webApplication(value:WebApplication):void{
				_webApplication = value;				
			}
			public function get webApplication():WebApplication{ return _webApplication; } 
						
//---------------------------- Context ---------------------------------------------  

//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				return {
						relationIdValue: _idCliente,
						nombreCliente:	_nombreCliente,
						numeroCliente:	_numeroCliente,
						webApplication: _webApplication,
						workManager: this,
						selectedItem: _idCliente
						}					
			}


			private function addValidations():void{
				Valid.changeLanguage(Languages.SPANISH);
				
				Valid.addComboVal(_estatus,"Estatus");
				Valid.addComboVal(_prioridad,"Prioridad");
				Valid.addStringVal(_titulo,3,100,"Título");
				//Valid.addComboVal(_categoria,"Categoría")
				Valid.addStringVal(_titulo,3,500,"Descripción")
				
				var validFields:ArrayCollection = Valid.validFields;
				for(var n:Number = 0;n<validFields.length;n++){					
					this[validFields[n].obj.name].addEventListener(Event.CHANGE,onFocusOut);
				}
				Valid.setErrorKnot(Validator.CIRCLE_KNOT,0xFF0000);
			}

			private function onFocusOut(e:Event):void{
				if(_newData||_updateData) Valid.validateAll();//Valid.validateOne(e.currentTarget.name);
			}
			
			private function extraCreateData(params:Object):Object{
				params['_autor'] 		= _webApplication.user.fullName;
				params['_idCliente'] 	= _idCliente;
				params['_idEmpleado'] 	= _webApplication.user.idEmpleado;	
				//params['_idContrato'] 	=  contratos.selectedItem._idContrato;	
				params['_color']		= _categoria.selectedItem._color;
				return params;
			}
			
			private function createRecordExtras():void{
				_autor.text 			= _webApplication.user.fullName;	
				//contratos.selectedIndex = 0;
			}
			
			private function extraUpdateData(params:Object):Object{	
				params['_autor'] 		= _autor.text;
				params['_idCliente'] 	= _idCliente;
				params['_idEmpleado'] 	= _webApplication.user.idEmpleado;	
				//params['_idContrato'] 	=	contratos.selectedItem._idContrato;	
				params['_color']		= _categoria.selectedItem._color;
				return params;
			}
			
			private function loadExtraFields(params:Object):void{
		
			}
			
			private function forceImports():void{
				Catalogs;
			}
			
			public function initView():void{
				forceImports();
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = ["_idBlog","_idEmpleado","_idCliente","_idContrato","_respuestas","_color"];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
				addValidations();
				loadScroll();
				//_MainService.getContracts(_idCliente);
				//_MainService.getContracts.addEventListener(ResultEvent.RESULT,contractsReady);
				_autor.text = _webApplication.user.fullName;
			}
			
			public function contractsReady(e:ResultEvent):void{
				_MainService.removeContracts.addEventListener(ResultEvent.RESULT,contractsReady);
				_contratos = Converter.arrayConverter(e.result);
				_contratos.addItemAt({_idContrato:0,_registro:"Seleccionar"},0);
				//contratos.selectedIndex = 0;
			}
			
			public function imageUploadReady(data:Object):void{
				
			}

			// ------------------- View Extra Data -------------------------------

			private function loadScroll():void{
				_dataList.visible = false;
				for(var n:Number = 0;n<100;n++){
					_DataResult.addItem({i:0});
				}
			}

			private function initData():void{
				_MainService.getFields();
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_dataReady = false;
			}
			
			public function closeWindow():void{
					if(_selectionMode&&_dataList.selectedIndex!=-1) StaticEvent.dispatchEvent(new SelectionEvent(SelectionEvent.SELECTION_COMPLETE,_dataList.selectedItems));
            		dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
            		PopUpManager.removePopUp(this);
            }
            
//-------------------------------- MainInit --------------------------------------
			
			private function newData():void{
				_Data.clear();
				_newData = true;
				_updateData = false;				
				this[_mainFocusField].setFocus();
				createRecordExtras();
				Valid.validateAll();
			}
			
			private function createData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraCreateData(_Data.makeData());
					_MainService.createRecord(params);
					_MainService.createRecord.addEventListener(ResultEvent.RESULT,onCreateComplete);
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}

			private function updateData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraUpdateData(_Data.makeData());
					params[_mainId] = _dataList.selectedItem[_mainId];
					_MainService.updateRecord(params);
					_MainService.updateRecord.addEventListener(ResultEvent.RESULT,onUpdateComplete);
					_dataIndex =_dataList.selectedIndex;
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function deleteDataAlert():void{
				if(_dataList.selectedIndex!=-1){
					Alert.show("Desea borrar el registro seleccionado?","Atención",Alert.YES|Alert.CANCEL,this,deleteData);
				}else{
					Alert.show("No hay registro selecionado","Error");
				}
			}
			
			private function deleteData(e:CloseEvent):void{
				if(e.detail==Alert.YES){
					var params:Object = new Object();
					params[_mainId] = _dataList.selectedItem[_mainId];
					_MainService.deleteRecord(params);
					_MainService.deleteRecord.addEventListener(ResultEvent.RESULT,onDeleteComplete);
					_dataReady = false;
				}
			}
			
			private function cancel():void{
				onDataSelect();
				resetBooleans();
				Valid.validateAll();
			}
			
			private function resetBooleans():void{
				_newData = false;
				_updateData = false;
			}

			private function dataChange():void{
				_updateData = true;
			}

			private function openImageEditor():void{
				if(_dataList.selectedIndex!=-1){
					//_newsIdNumber 	= new Number(_dataList.selectedItem._blogId);
					openPopUp("managers.ImageManager")
				}else{
					Alert.show("No hay registro selecionado","Error");
				}
			}
			
			private function openCategorias():void{
				openPopUp("comunicaciones.Comunicaciones_Blog_Temas")
			}
//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
						getData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataResult= new ArrayCollection();
				_dataList.visible = true;
				
			}
			
			private function getData():void{
				_MainService.getRecords(_idCliente);
				_MainService.getRecords.addEventListener(ResultEvent.RESULT,onGetDataResult);
			}
			
			private function onGetDataResult(e:ResultEvent):void{
				_MainService.getRecords.removeEventListener(ResultEvent.RESULT,onGetDataResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No hay registros en la base de datos","Atención")
				}else{
					if(_dataIndex<0) _dataIndex = 0;
					_Data.loadData(_DataResult[_dataIndex]);
					_dataList.selectedIndex = _dataIndex;
					_dataList.scrollToIndex(_dataList.selectedIndex);
					loadExtraFields(_DataResult[_dataIndex]);
				}
				_dataReady = true;
				resetBooleans();
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}

			private function onDataSelect():void{
				if(_dataList.selectedIndex!=-1) {
					_Data.loadData(_dataList.selectedItem);
					_dataIndex =_dataList.selectedIndex;
					loadExtraFields(_dataList.selectedItem);
					_selectedId = _dataList.selectedItem[_mainId];
				}
			}
			
			private function onCreateComplete(e:ResultEvent):void{				
				_MainService.createRecord.removeEventListener(ResultEvent.RESULT,onCreateComplete);
				_dataIndex = _DataResult.length;
				getData();
			}
			
			private function onUpdateComplete(e:ResultEvent):void{
				_MainService.updateRecord.removeEventListener(ResultEvent.RESULT,onUpdateComplete);
				getData();
			}
			
			private function onDeleteComplete(e:ResultEvent):void{
				_MainService.deleteRecord.removeEventListener(ResultEvent.RESULT,onDeleteComplete);
				_dataIndex = _DataResult.length-2;
				getData();
			}
			
//-------------------------------- ResultsEvents --------------------------------------	

//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean=false):void{
				var pop:TitleWindow = PopUpManager.createPopUp(this, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
				pop.name = popUpName;
				pop.addEventListener(CloseEvent.CLOSE, closePopup);
				if(pop.hasOwnProperty("context")){
					Object(pop).context = viewContext;
				}
				PopUpManager.centerPopUp(pop);
			}
			
			private function closePopup(e:CloseEvent):void{			
	            		PopUpManager.removePopUp(e.target as TitleWindow);
			}
//-------------------------------- POP UP WINDOW --------------------------------------

//-------------------------------- Search Engine --------------------------------------

			private function searchFilter():void{
               			_DataResult.filterFunction = vlidateSearch;
               			_DataResult.refresh();
           		}
          
	       		private function vlidateSearch(item:Object):Boolean{
	           		var isMatch:Boolean = false;           
	           		if(item[_searchType.selectedItem.value].toLowerCase().search(_searchFilter.toLowerCase()) != -1){
	               			isMatch = true
	           		}              
	           		return isMatch;              
	       		}
	       	
	       		private function search():void{
				_searchFilter = _searchField.text;
				searchFilter();
			}
			private var _searchFilter:String 			= new String();
[Bindable]	private var _searchTypes:ArrayCollection 	= new ArrayCollection([{label:"Blog :",     	value:"_idBlog"},{label:"Fecha Creacion :",     	value:"_fechaCreacion"},{label:"Titulo :",     	value:"_titulo"}]);

//-------------------------------- Search Engine --------------------------------------					
			
		]]>
	</mx:Script>
	<mx:Label x="16" y="12" text="Creación :" textAlign="right"/>
<mx:DateField  x="86" y="10" id="_fechaCreacion" formatString="DD/MM/YYYY" change="dataChange();" width="108"/>
<mx:Label x="17.5" y="128" text="Categoría :" textAlign="right"/>
<mx:ComboBox  x="86.5" y="126" id="_categoria" change="dataChange();" width="195" dataProvider="{Catalogs.DataObject['comunicaciones_blog_temas']}" labelField="_nombre"/>
<mx:Label x="39.5" y="154" text="Título :" textAlign="right"/>
<mx:TextInput x="86.5" y="156" id="_titulo" change="dataChange();" width="355"/>
<mx:Label x="8.5" y="184" text="Descripción :" textAlign="right"/>
<mx:TextArea x="86.5" y="186" id="_descripcion" change="dataChange();" width="355"/>
<mx:Label x="22" y="70" text="Usuario :" textAlign="right"/>
<mx:TextInput x="86" y="68" id="_autor" change="dataChange();" width="355" editable="false"/>
	<mx:TextInput x="86" y="38" width="264" editable="false" text="{_nombreCliente}"/>
	<mx:TextInput x="358" y="38" width="83" editable="false" text="{_numeroCliente}"/>
<mx:Label x="269" y="12" text="Prioridad :" textAlign="right"/>
	<mx:Label x="25" y="40" text="Cliente :" textAlign="right"/>
	<mx:Label x="30.5" y="100" text="Estatus :" textAlign="right"/>
<mx:ComboBox  x="333" y="10" id="_prioridad" change="dataChange();" width="108" dataProvider="{ConstantData.Priority}" labelField="label"/>
	<mx:ComboBox  x="86.5" y="96" id="_estatus" change="dataChange();" width="195" dataProvider="{ConstantData.BlogStatus}" labelField="label"/>

	<mx:DataGrid height="182" dataProvider="{_DataResult}" id="_dataList" change="onDataSelect();" allowMultipleSelection="{_multipleSelection}"  enabled="{_dataReady&amp;&amp;!_newData}" y="266" width="433" x="8">
		<mx:columns>			
			<mx:DataGridColumn headerText="Id" dataField="_idBlog" width="40"/>
			<mx:DataGridColumn headerText="Creacion" dataField="_fechaCreacion" width="70" labelFunction="Converter.columDateConverter"/>
			<mx:DataGridColumn headerText="Título" dataField="_titulo" width="200"/>
			<mx:DataGridColumn headerText="Com" dataField="_respuestas" width="40"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:Button label="Nuevo" width="80" enabled="{_dataReady}" visible="{!_newData&amp;&amp;!_updateData}" click="newData();" y="456" x="8"/>
	<mx:Button label="Cancelar" width="80" enabled="{_dataReady}" visible="{_newData||_updateData}" click="cancel();" y="456" x="96"/>
	<mx:Button label="Aceptar" width="80" enabled="{_dataReady}" visible="{_newData}" click="createData();" y="456" x="8"/>
	<mx:Button label="Eliminar" width="80" enabled="{_dataReady&amp;&amp;!_newData}" visible="{!_newData&amp;&amp;!_updateData}" click="deleteDataAlert();" y="456" x="96"/>
	<mx:Button label="Actualizar" width="80" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_updateData}" visible="{_updateData&amp;&amp;!_newData}" click="updateData();" y="456" x="8"/>
	<mx:Button label="Regresar" click="closeWindow();" width="145"  enabled="{!_newData}" y="456" x="296"/>

	<mx:ComboBox 	x="86.5" id="_searchType" 	dataProvider="{_searchTypes}" 	width="108" y="238"/>
	<mx:TextInput 	x="202.5" id="_searchField" 	change="search();" 		width="239" enabled="{!_newData}" y="238"/>
	<mx:Label x="11.5" text="Filtrar por :" textAlign="right" y="240"/>
	<mx:Button x="289.5" y="126" width="30" height="22" click="openCategorias()">
		<mx:icon>@Embed(source='../../assets/Icons/Buttons/Edit.png')</mx:icon>
	</mx:Button>
	
</mx:TitleWindow>
