<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   title="Administración de Usuarios" 	
			   width="590" height="522" 
			   >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Label x="30" y="160" text="Nivel :" textAlign="right"/>
	<s:ComboBox  x="78" y="160" id="_roleId" dataProvider="{Catalogs.DataObject.___adminRoles}" labelField="_roleName" change="dataChange();" width="160" tabIndex="7"/>
	<s:Label x="16" y="134" text="Groupo :" textAlign="right"/>
	<s:ComboBox  x="78" y="134" id="_groupId" dataProvider="{Catalogs.DataObject.___adminGroups}" labelField="_groupName" change="dataChange();" width="160" tabIndex="6"/>
	<s:Label x="13" y="26" text="Usuario :" textAlign="right"/>
	<s:Label x="77" y="16" text="nombre" textAlign="right" color="#CAC8C8" fontStyle="italic" fontSize="9"/>
	<s:Label x="246" y="16" text="a. paterno" textAlign="right" color="#CAC8C8" fontStyle="italic" fontSize="9"/>
	<s:Label x="414" y="16" text="a. materno" textAlign="right" color="#CAC8C8" fontStyle="italic" fontSize="9"/>
	<s:TextInput x="78" y="26" id="_firstName" restrict="A-Z a-z  á é í ó ú ñ Ñ" maxChars="50" change="dataChange();" width="160" tabIndex="0"/>
	<s:TextInput x="246" y="26" id="_lastName_1" restrict="A-Z a-z  á é í ó ú ñ Ñ" maxChars="50" change="dataChange();" width="160" tabIndex="1"/>
	<s:TextInput x="414" y="26" id="_lastName_2" restrict="A-Z a-z  á é í ó ú ñ Ñ" maxChars="50" change="dataChange();" width="160" tabIndex="2"/>
	<s:Label x="26" y="78" text="Login :" textAlign="right"/>
	<s:TextInput x="78" y="78" id="_login" maxChars="16" change="dataChange();" width="160" tabIndex="4"/>
	<s:Label x="5" y="104" text="Password :" textAlign="right"/>
	<s:TextInput x="78" y="104" id="_psw" maxChars="16" displayAsPassword="true" change="dataChange();" width="160" tabIndex="5"/>
	<s:Label x="23" y="52" text="E-Mail :" textAlign="right"/>
	<s:TextInput x="78" y="52" id="_mail" restrict="a-z @ . _ -" maxChars="50" change="dataChange();" width="328" tabIndex="3"/>
	<s:CheckBox x="246" y="160" id="_active" change="dataChange();" width="62" label="Activo"/>
	
	<!--mx:DataGrid height="214" dataProvider="{_DataResult}" id="_dataList" change="onDataSelect();" enabled="{_dataReady&amp;&amp;!_newData}" bottom="39" left="10" right="10">
		<mx:columns>			
			<mx:DataGridColumn headerText="Id" dataField="_userId" width="40"/>
			<mx:DataGridColumn headerText="Act" width="40">			
				<mx:itemRenderer>
					<mx:Component>
						<mx:HBox width="100%"  verticalAlign="middle" horizontalAlign="center">
							<mx:Image source="assets/Icons/Status/auth_{data._active}.png"  width="13" height="13" scaleContent="false"/>
						</mx:HBox>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>	
			<mx:DataGridColumn headerText="Nombre :" dataField="_firstName"/>
			<mx:DataGridColumn headerText="A. Paterno :" dataField="_lastName_1"/>
			<mx:DataGridColumn headerText="A. Materno :" dataField="_lastName_2"/>
		</mx:columns>
	</mx:DataGrid-->
	
	<s:Button label="Nuevo" width="80" enabled="{_dataReady}" visible="{!_newData&amp;&amp;!_updateData}" click="newData();" bottom="10" left="10"/>
	<s:Button label="Cancelar" width="80" enabled="{_dataReady}" visible="{_newData||_updateData}" click="cancel();" bottom="10" left="98"/>
	<s:Button label="Aceptar" width="80" enabled="{_dataReady}" visible="{_newData}" click="createData();" bottom="10" left="10"/>
	<s:Button label="Eliminar" width="80" enabled="{_dataReady&amp;&amp;!_newData}" visible="{!_newData&amp;&amp;!_updateData}" click="deleteDataAlert();" bottom="10" left="98"/>
	<s:Button label="Actualizar" width="80" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_updateData}" visible="{_updateData&amp;&amp;!_newData}" click="updateData();" bottom="10" left="10"/>
	<s:Button label="Regresar" click="closeWindow();" width="145"  enabled="{!_newData}" bottom="10" right="10"/>
	
	<s:ComboBox 	x="78" id="_searchType" 	dataProvider="{_searchTypes}" 	width="160" bottom="261"/>
	<s:TextInput 	x="246" id="_searchField" 	change="search();" 		width="330" enabled="{!_newData}" bottom="261"/>
	<s:Label x="30" text="Filtrar :" textAlign="right" bottom="263"/>
	<s:Button x="246" y="133" width="30" click="openPopUp('system.UsersGroups',true)"
			  icon="../../assets/Icons/Buttons/Edit.png" toolTip="Editar Grupos">
		
		
	</s:Button>
	
	<s:DataGrid id="_dataList" x="598" y="26" left="10" right="10" bottom="39" width="510"
				height="202" dataProvider="{_DataResult}" enabled="{_dataReady&amp;&amp;!_newData}"
				selectionChange="onDataSelect();">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="_userId" headerText="Id" width="40"></s:GridColumn>
				<s:GridColumn dataField="_active" headerText="Act" width="40" itemRenderer="renderers.ColumnGridActiveRenderer"></s:GridColumn>	
				<s:GridColumn dataField="_firstName" headerText="Nombre :"></s:GridColumn>
				<s:GridColumn dataField="_lastName_1" headerText="A. Paterno :"></s:GridColumn>
				<s:GridColumn dataField="_lastName_2" headerText="A. Materno :"></s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
	
	
	
	
	
	
	<fx:Script>
		<![CDATA[
			import mx.random.constants.Catalogs;
			import mx.random.windowManagers.PopManager;
			import mx.random.constants.Languages;
			import mx.random.forms.Validator;
			import mx.random.dataManagers.EventManager;
			import mx.random.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.web.WebApplication;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.rpc.remoting.RemoteObject;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 		= new RemoteObject();
			[Bindable]	private var _Data:DataManager 				= new DataManager(this);
			[Bindable]	private var _DataResult:ArrayCollection 		= new ArrayCollection();			
			private var _eventManager:EventManager 		= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------
			
			[Bindable]	public var _dataReady:Boolean 			= false;
			[Bindable]	public var _newData:Boolean 			= false;
			[Bindable]	public var _updateData:Boolean 			= false;
			
			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number = 0;
			private var _selectedName:String = "";
			private var _serviceName  		= "UserAdmin";
			private var _mainId  			= "_userId";
			private var _mainFocusField:String      = "_firstName";
			
			
			//-----------Local Vars -----------
			
			//---------------------------- Context ---------------------------------------------            
			
			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
			}
			
			public function set workManager(value:Object):void{
				_workManager = value;
			}
			
			public function set webApplication(value:WebApplication):void{
				_webApplication = value;
				initView();
			}
			public function get webApplication():WebApplication{ return _webApplication; } 
			
			//---------------------------- Context ---------------------------------------------  
			
			//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				return {webApplication: _webApplication,
					workManager: this
				}					
			}
			
			private function addValidations():void{
				Valid.changeLanguage(Languages.SPANISH);
				
				Valid.addStringVal(_firstName,3,50,"Nombre");
				Valid.addStringVal(_lastName_1,3,50,"Apellido Paterno");
				Valid.addStringVal(_lastName_2,3,50,"Apellido Materno");
				Valid.addStringVal(_login,5,16,"Login");
				Valid.addStringVal(_psw,5,16,"Password");
				Valid.addMailVal(_mail,true,"E-Mail");
				
				
				var validFields:ArrayCollection = Valid.validFields;
				for(var n:Number = 0;n<validFields.length;n++){					
					this[validFields[n].obj.name].addEventListener(Event.CHANGE,onFocusOut);
				}
				Valid.setErrorKnot(Validator.CIRCLE_KNOT,0xFF0000);
			}
			
			private function onFocusOut(e:Event):void{
				if(_newData||_updateData) Valid.validateAll();//Valid.validateOne(e.currentTarget.name);
			}
			
			private function extraCreateData(params:Object):Object{
				//params["_newsImage"] = _image;
				//params['_fechaNacimiento'] 	= _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;
				return params;
			}
			
			private function createRecordExtras():void{
				//_image = "defaultNew.jpg";
				/*_day.selectedIndex 	= 0;
				_month.selectedIndex 	= 0;
				_year.selectedIndex 	= 0;*/
			}
			
			private function extraUpdateData(params:Object):Object{	
				//params['_fechaNacimiento'] = _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;			
				return params;
			}
			
			private function loadExtraFields(params:Object):void{
				//_image = params["_newsImage"];
				/*
				if(tempDate){
				var temp:Array 		 = tempDate.split('-');
				_day.selectedIndex 	 = parseInt(temp[2]);
				_month.selectedIndex = parseInt(temp[1]);
				_year.selectedIndex  = ConstantData.FindYearindex(temp[0]);
				}else{
				_day.selectedIndex 		= 0;
				_month.selectedIndex 	= 0;
				_year.selectedIndex 	= 0;
				}*/
			}
			
			private function forceImports():void{
				Catalogs;
				//UsersGroups;
			}
			
			public function initView():void{
				forceImports();
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = ["_userId","_dwonload","_upload","_edit","_userPath"];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
				addValidations();
				loadScroll();
			}
			
			public function imageUploadReady(data:Object):void{
				
			}
			
			// ------------------- View Extra Data -------------------------------
			
			private function loadScroll():void{
				_dataList.visible = false;
				for(var n:Number = 0;n<100;n++){
					_DataResult.addItem({i:0});
				}
			}
			
			private function initData():void{
				_MainService.getFields();
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_dataReady = false;
			}
			
			public function closeWindow():void{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				PopUpManager.removePopUp(this);
			}
			
			//-------------------------------- MainInit --------------------------------------
			
			private function newData():void{
				_Data.clear();
				_newData = true;
				_updateData = false;				
				this[_mainFocusField].setFocus();
				createRecordExtras();
				Valid.validateAll();
			}
			
			private function createData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraCreateData(_Data.makeData());
					_MainService.createRecord(params);
					_MainService.createRecord.addEventListener(ResultEvent.RESULT,onCreateComplete);
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function updateData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraUpdateData(_Data.makeData());
					params[_mainId] = _dataList.selectedItem[_mainId];
					_MainService.updateRecord(params);
					_MainService.updateRecord.addEventListener(ResultEvent.RESULT,onUpdateComplete);
					_dataIndex =_dataList.selectedIndex;
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function deleteDataAlert():void{
				if(_dataList.selectedIndex!=-1){
					Alert.show("Desea borrar el registro seleccionado?","Atención",Alert.YES|Alert.CANCEL,this,deleteData);
				}else{
					Alert.show("No hay registro selecionado","Error");
				}
			}
			
			private function deleteData(e:CloseEvent):void{
				if(e.detail==Alert.YES){
					var params:Object = new Object();
					params[_mainId] = _dataList.selectedItem[_mainId];
					_MainService.deleteRecord(params);
					_MainService.deleteRecord.addEventListener(ResultEvent.RESULT,onDeleteComplete);
					_dataReady = false;
				}
			}
			
			private function cancel():void{
				onDataSelect();
				resetBooleans();
				Valid.validateAll();
			}
			
			private function resetBooleans():void{
				_newData = false;
				_updateData = false;
			}
			
			private function dataChange():void{
				_updateData = true;
			}
			
			private function openImageEditor():void{
				if(_dataList.selectedIndex!=-1){
					//_newsIdNumber 	= new Number(_dataList.selectedItem._blogId);
					openPopUp("managers.ImageManager")
				}else{
					Alert.show("No hay registro selecionado","Error");
				}
			}
			//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
						getData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataResult= new ArrayCollection();
				_dataList.visible = true;
				
			}
			
			private function getData():void{
				_MainService.getRecords();
				_MainService.getRecords.addEventListener(ResultEvent.RESULT,onGetDataResult);
			}
			
			private function onGetDataResult(e:ResultEvent):void{
				_MainService.getRecords.removeEventListener(ResultEvent.RESULT,onGetDataResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No hay registros en la base de datos","Atención")
				}else{
					if(_dataIndex<0) _dataIndex = 0;
					_Data.loadData(_DataResult[_dataIndex]);
					_dataList.selectedIndex = _dataIndex;
					_dataList.scrollToIndex(_dataList.selectedIndex);
					loadExtraFields(_DataResult[_dataIndex]);
				}
				_dataReady = true;
				resetBooleans();
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}
			
			private function onDataSelect():void{
				if(_dataList.selectedIndex!=-1) {
					_Data.loadData(_dataList.selectedItem);
					_dataIndex =_dataList.selectedIndex;
					loadExtraFields(_dataList.selectedItem);
					_selectedId = _dataList.selectedItem[_mainId];
				}
			}
			
			private function onCreateComplete(e:ResultEvent):void{				
				_MainService.createRecord.removeEventListener(ResultEvent.RESULT,onCreateComplete);
				_dataIndex = _DataResult.length;
				getData();
			}
			
			private function onUpdateComplete(e:ResultEvent):void{
				_MainService.updateRecord.removeEventListener(ResultEvent.RESULT,onUpdateComplete);
				getData();
			}
			
			private function onDeleteComplete(e:ResultEvent):void{
				_MainService.deleteRecord.removeEventListener(ResultEvent.RESULT,onDeleteComplete);
				_dataIndex = _DataResult.length-2;
				getData();
			}
			
			//-------------------------------- ResultsEvents --------------------------------------	
			
			//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean=false):void{
				var pop:TitleWindow = PopUpManager.createPopUp(this, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
				pop.name = popUpName;
				pop.addEventListener(CloseEvent.CLOSE, closePopup);
				if(pop.hasOwnProperty("context")){
					Object(pop).context = viewContext;
				}
				PopUpManager.centerPopUp(pop);
			}
			
			private function closePopup(e:CloseEvent):void{
				PopUpManager.removePopUp(e.target as TitleWindow);
			}
			//-------------------------------- POP UP WINDOW --------------------------------------
			
			//-------------------------------- Search Engine --------------------------------------
			
			private function searchFilter():void{
				_DataResult.filterFunction = vlidateSearch;
				_DataResult.refresh();
			}
			
			private function vlidateSearch(item:Object):Boolean{
				var isMatch:Boolean = false;           
				if(item[_searchType.selectedItem.value].toLowerCase().search(_searchFilter.toLowerCase()) != -1){
					isMatch = true
				}              
				return isMatch;              
			}
			
			private function search():void{
				_searchFilter = _searchField.text;
				searchFilter();
			}
			private var _searchFilter:String 			= new String();
			[Bindable]	private var _searchTypes:ArrayCollection 	= new ArrayCollection([{label:"Id",     	value:"_userId"},{label:"Nombre",     	value:"_firstName"},{label:"A. Paterno",     	value:"_lastName_1"},{label:"A. Materno",     	value:"_lastName_2"}]);
			
			//-------------------------------- Search Engine --------------------------------------		
			
		]]>
	</fx:Script>
</s:TitleWindow>
