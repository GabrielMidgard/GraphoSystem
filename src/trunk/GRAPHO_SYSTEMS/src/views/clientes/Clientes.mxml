<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="1110" height="678" contentBackgroundColor="#D5FBDB"
			   title="Administración de Clientes">
	
	
	
	<fx:Script>
		<![CDATA[
			import views.fiscales.Fiscales_Cliente_Servicios;			
			import views.system.UC;
			import views.fiscales.Fiscales_Contactos;
			import views.fiscales.Fiscales_Representantes;
			import mx.random.userAuth.User;
			import mx.random.constants.SystemGlobals;
			import mx.random.constants.GlobalData;
			import mx.random.constants.Catalogs;
			import mx.random.constants.ConstantData;
			import mx.random.constants.Constantes;
			import mx.random.windowManagers.PopManager;
			import mx.random.constants.Languages;
			import mx.random.forms.Validator;
			import mx.random.dataManagers.EventManager;
			import mx.random.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.web.WebApplication;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.rpc.remoting.RemoteObject;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 		= new RemoteObject();
			private var _SaleService:RemoteObject 		= new RemoteObject();
			[Bindable]	private var _Data:DataManager 				= new DataManager(this);
			[Bindable]	private var _DataResult:ArrayCollection 		= new ArrayCollection();			
			private var _eventManager:EventManager 		= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------
			
			[Bindable]	public var _dataReady:Boolean 			= false;
			[Bindable]	public var _newData:Boolean 			= false;
			[Bindable]	public var _updateData:Boolean 			= false;
			
			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number = 0;
			private var _selectedName:String 		= "";
			private var _serviceName  				= "Fiscales_Clientes";
			private var _mainId  					= "_idCliente";
			private var _mainFocusField:String      = "_nombreEmpresa";
			
			[Bindable]	private var _filterData:ArrayCollection = new ArrayCollection();	
			[Bindable]	private var _vendedores:ArrayCollection = new ArrayCollection();	
			
			[Bindable]	private var _estatusCliente:ArrayCollection = new ArrayCollection([{label:"Activo",value:"0"},{label:"Inactivo",value:"1"},{label:"Suspendido",value:"1"}]);
			[Bindable]	private var _tipoCliente:ArrayCollection = new ArrayCollection([{label:"Seleccionar",value:"0"},{label:"Persona Física",value:"1"},{label:"Persona Moral",value:"1"}]);
			
			
			
			//-----------Local Vars -----------
			
			//---------------------------- Context ---------------------------------------------            
			
			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
				initView();
			}
			
			public function set workManager(value:Object):void{
				_workManager = value;
			}
			
			public function set webApplication(value:WebApplication):void{
				_webApplication = value;
				
			}
			public function get webApplication():WebApplication{ return _webApplication; } 
			
			//---------------------------- Context ---------------------------------------------  
			
			//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				return {webApplication: _webApplication,
					workManager: this,
					selectedItem: _dataList.selectedItem,
					Cliente: _dataList.selectedItem
				}					
			}
			
			private function addValidations():void{
				Valid.changeLanguage(Languages.SPANISH);
				Valid.setErrorKnot(Validator.CIRCLE_KNOT,0xFF0000);			
				Valid.validateOnChange = true;	
				
				Valid.addPhoneVal(_telefonoCasa,true,false,"Teléfono de casa");
				Valid.addPhoneVal(_telefonoMovil,true,false,"Teléfono móvil");
				Valid.addPhoneVal(_telefonoOficina,true,false,"Teléfono de oficina");
				
				Valid.addSomeRequired([_telefonoCasa,_telefonoMovil,_telefonoOficina],"Teléfonos");
				Valid.addSomeEquals(_telefonoCasa,_telefonoMovil,"Los Telefonos no pueden ser iguales",true);
				Valid.addSomeEquals(_telefonoMovil,_telefonoOficina,"Los Telefonos no pueden ser iguales",true);
				Valid.addSomeEquals(_telefonoCasa,_telefonoOficina,"Los Telefonos no pueden ser iguales",true);
				
				Valid.addMailVal(_mailPrincipal,false,"Mail Principal");
				Valid.addMailVal(_mailSecundario,false,"Mail Secundario");
				Valid.addSomeRequired([_mailPrincipal,_mailSecundario],"E-Mails");
				Valid.addSomeEquals(_mailPrincipal,_mailSecundario,"Los E-Mails no pueden ser iguales",true);
				
				Valid.addStringVal(_nombreEmpresa,3,150,"Nombre de la Empresa");
				Valid.addStringVal(_rfc,12,13,"RFC");
				Valid.addStringVal(_razonSocial,3,150,"Razón Social");
				Valid.addStringVal(_numeroCliente,3,150,"Número de Cliente");
				Valid.addComboVal(_idTipoCliente,"Tipo de Cliente");				
				
				Valid.addStringVal(_calle,5,255,"Calle");
				Valid.addStringVal(_numeroExterior,1,8,"Número Exterior");
				Valid.addStringVal(_ciudad,2,50,"Ciudad");
				Valid.addStringVal(_colonia,2,50,"Colonia");
				Valid.addComboVal(_estado,"Estado");
				Valid.addStringVal(_cp,5,5,"Código Postal");
				
				
				
				
			}
			
			
			
			private function extraCreateData(params:Object):Object{
				/*params["_newsImage"] = _image;
				if(_webApplication.user.accessType!=-1){
				params['_idEmpleado'] 		= _webApplication.user.idEmpleado;
				params['_idSucursal'] 		= _webApplication.user.idSucursal;
				}else{
				params['_idEmpleado'] 		= _vendedor.selectedItem._idEmpleado;
				params['_idSucursal'] 		= _vendedor.selectedItem._idSucursal;
				}
				params['_idSucursal'] 		= _webApplication.user.idSucursal;
				params['_idCompania'] 		= _webApplication.user.idCompania;
				params['_codigoMembresia'] 	= _idMembresia.selectedItem._codigo;				
				params['_codigoPrograma'] 	= _idPrograma.selectedItem._codigo;
				params['_fechaNacimiento'] 	= _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;*/				
				return params;							
			}
			
			private function createRecordExtras():void{				
				/*_image = "defaultNew.jpg";
				_day.selectedIndex 	= 0;
				_month.selectedIndex = 0;
				_year.selectedIndex 	= 0;*/	
				_contacto.text = "";
				_representante.text = "";			
			}
			
			private function extraUpdateData(params:Object):Object{	
				//params['_fechaNacimiento'] = _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;			
				return params;
			}
			
			private function loadExtraFields(params:Object):void{
				/*_image = params["_newsImage"];
				var tempDate:String = params["_fechaNacimiento"];
				
				if(tempDate){
				var temp:Array 		 = tempDate.split('-');
				_day.selectedIndex 	 = parseInt(temp[2]);
				_month.selectedIndex = parseInt(temp[1]);
				_year.selectedIndex  = ConstantData.FindYearindex(temp[0]);
				}else{
				_day.selectedIndex 		= 0;
				_month.selectedIndex 	= 0;
				_year.selectedIndex 	= 0;
				}*/
				_contacto.text = params["_contacto"];
				_representante.text = params["_representante"];
			}
			
			private function forceImports():void{
				Fiscales_Representantes;
				Fiscales_Contactos;
				Fiscales_Cliente_Servicios;
				UC;
			}
			
			public function initView():void{
				/*
				_SaleService = _webApplication.getService(_serviceName);
				
				if(_webApplication.user.accessType==-1&&_webApplication.user.accessType==3){
				Valid.addComboVal(_vendedor,"Vendedor");
				_vendedor.enabled = true;
				_SaleService.getSellers(15);
				_SaleService.addEventListener(FaultEvent.FAULT,onFault);
				_SaleService.getSellers.addEventListener(ResultEvent.RESULT,onSalesReady);
				}else{
				_vendedores.addItem({_idEmpleado:_webApplication.user.idEmpleado,_nombre:_webApplication.user.fullName});
				_vendedor.enabled = false;
				}*/
				
				forceImports();				
				_filterData.addItem({_codigo:"00",_nombre:"TODOS"});
				/*
				for(var n:Number = 0;n<SystemGlobals.PRODUCTOS.length;n++){
				_filterData.addItem({_codigo:SystemGlobals.PRODUCTOS[n]._codigo,_nombre:SystemGlobals.PRODUCTOS[n]._nombre});
				}*/
				
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = ["_idCliente","_idRepresentanteLegal","_idContacto","_idRecoleccion"];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
				addValidations();
				loadScroll();
			}
			
			
			private function onSalesReady(e:ResultEvent):void{
				_SaleService.getSellers.removeEventListener(ResultEvent.RESULT,onSalesReady);
				_vendedores = new ArrayCollection();
				_vendedores.addItem({_idEmpleado:"00",_nombre:"Seleccionar"});
				var _sallers:ArrayCollection = Converter.arrayConverter(e.result);
				for(var n:Number = 0;n<_sallers.length;n++){
					_vendedores.addItem({_idEmpleado:_sallers[n]._idEmpleado,_nombre:_sallers[n]._nombre+" "+_sallers[n]._paterno+" "+_sallers[n]._materno});
				}
			}
			
			
			
			// ------------------- View Extra Data -------------------------------
			
			private function loadScroll():void{
				_dataList.visible = false;
				for(var n:Number = 0;n<100;n++){
					_DataResult.addItem({i:0});
				}
			}
			
			private function initData():void{
				_MainService.getFields();
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_dataReady = false;
			}
			
			public function closeWindow():void{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				PopUpManager.removePopUp(this);
			}
			
			//-------------------------------- MainInit --------------------------------------
			
			private function newData():void{
				_Data.clear();
				_newData = true;
				_updateData = false;				
				this[_mainFocusField].setFocus();
				createRecordExtras();
				Valid.validateAll();
			}
			
			private function createData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraCreateData(_Data.makeData());
					_MainService.createRecord(params);
					_MainService.createRecord.addEventListener(ResultEvent.RESULT,onCreateComplete);
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function updateData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraUpdateData(_Data.makeData());
					params[_mainId] = _dataList.selectedItem[_mainId];
					_MainService.updateRecord(params);
					_MainService.updateRecord.addEventListener(ResultEvent.RESULT,onUpdateComplete);
					_dataIndex =_dataList.selectedIndex;
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function deleteDataAlert():void{
				if(_dataList.selectedIndex!=-1){
					Alert.show("Desea borrar el registro seleccionado?","Atención",Alert.YES|Alert.CANCEL,this,deleteData);
				}else{
					Alert.show("No hay registro selecionado","Error");
				}
			}
			
			private function deleteData(e:CloseEvent):void{
				if(e.detail==Alert.YES){
					var params:Object = new Object();
					params[_mainId] = _dataList.selectedItem[_mainId];
					_MainService.deleteRecord(params);
					_MainService.deleteRecord.addEventListener(ResultEvent.RESULT,onDeleteComplete);
					_dataReady = false;
				}
			}
			
			private function cancel():void{
				onDataSelect();
				resetBooleans();				
				Valid.validateAll();
				Valid.removeAllKnots();				
			}
			
			private function resetBooleans():void{
				_newData = false;
				_updateData = false;
			}
			
			private function dataChange():void{				
				_updateData = true;				
			}
			
			private function openImageEditor():void{
				if(_dataList.selectedIndex!=-1){
					//_newsIdNumber 	= new Number(_dataList.selectedItem._blogId);
					openPopUp("managers.ImageManager")
				}else{
					Alert.show("No hay registro selecionado","Error");
				}
			}
			//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onFilterChange():void{
				_dataIndex = -1;
				getData();
			}
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
						getData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataResult= new ArrayCollection();
				_dataList.visible = true;
				
			}
			
			public function getData():void{
				
				var parmas:Object = {};
				_MainService.getRecords();
				_MainService.getRecords.addEventListener(ResultEvent.RESULT,onGetDataResult);
			}
			
			private function onGetDataResult(e:ResultEvent):void{
				_MainService.getRecords.removeEventListener(ResultEvent.RESULT,onGetDataResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No hay registros en la base de datos","Atención")
				}else{
					if(_dataIndex<0) _dataIndex = 0;
					_Data.loadData(_DataResult[_dataIndex]);
					_dataList.selectedIndex = _dataIndex;
					_dataList.setSelectedIndex(_dataList.selectedIndex);
					loadExtraFields(_DataResult[_dataIndex]);
					Valid.validateAll();
					Valid.removeAllKnots();
				}
				_dataReady = true;
				resetBooleans();
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}
			
			private function onDataSelect():void{
				if(_dataList.selectedIndex!=-1) {
					_Data.loadData(_dataList.selectedItem);
					_dataIndex =_dataList.selectedIndex;
					loadExtraFields(_dataList.selectedItem);
					_selectedId = _dataList.selectedItem[_mainId];
				}
			}
			
			private function onCreateComplete(e:ResultEvent):void{				
				_MainService.createRecord.removeEventListener(ResultEvent.RESULT,onCreateComplete);
				_dataIndex = _DataResult.length;
				getData();
			}
			
			private function onUpdateComplete(e:ResultEvent):void{
				_MainService.updateRecord.removeEventListener(ResultEvent.RESULT,onUpdateComplete);
				getData();
			}
			
			private function onDeleteComplete(e:ResultEvent):void{
				_MainService.deleteRecord.removeEventListener(ResultEvent.RESULT,onDeleteComplete);
				_dataIndex = _DataResult.length-2;
				getData();
			}
			
			//-------------------------------- ResultsEvents --------------------------------------	
			
			//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean = false):void{
				var pop:TitleWindow = PopUpManager.createPopUp(this, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
				pop.name = popUpName;
				pop.addEventListener(CloseEvent.CLOSE, closePopup);
				if(pop.hasOwnProperty("context")){
					Object(pop).context = viewContext;
				}
				PopUpManager.centerPopUp(pop);
			}
			
			private function closePopup(e:CloseEvent):void{
				PopUpManager.removePopUp(e.target as TitleWindow);
			}
			//-------------------------------- POP UP WINDOW --------------------------------------
			
			//-------------------------------- Search Engine --------------------------------------
			
			private function searchFilter():void{
				_DataResult.filterFunction = vlidateSearch;
				_DataResult.refresh();
			}
			
			private function vlidateSearch(item:Object):Boolean{
				var isMatch:Boolean = false; 
				if(item[_searchType.selectedItem.value]!=null){         
					if(item[_searchType.selectedItem.value].toLowerCase().search(_searchFilter.toLowerCase()) != -1){
						isMatch = true
					}   
				}           
				return isMatch;              
			}
			
			private function search():void{
				_searchFilter = _searchField.text;
				searchFilter();
			}
			
			
			private function updateFilter():void{
				//_searchField.text = "";
				//search();
			}	
			
			private var _searchFilter:String 			= new String();
			[Bindable]	private var _searchTypes:ArrayCollection 	= new ArrayCollection([	{label:"Número Cliente", value:"_numeroCliente"},
				{label:"Nombre Empresa", value:"_nombreEmpresa"},
				{label:"RFC",     		value:"_rfc"}
			]);
			
			//-------------------------------- Search Engine --------------------------------------					
			
		]]>
	</fx:Script>
	<s:Label x="49.5" y="60" text="Empresa :" />
	<s:Label x="26.5" y="90" text="Razón Social :" />
	<s:Label x="57.5" y="30" text="Cliente :" />
	<s:Label x="113" y="263" text="calle"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="113" y="304" text="ciudad"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="113" y="446" text="principal"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="113" y="484" text=" principal"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="273.5" y="484" text="secundario"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="273.5" y="446" text="movil"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="439" y="304" text="estado"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="441" y="263" text="número"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="498" y="263" text="interior"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="543" y="263" text="c.p."  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="113" y="16" text="número"  fontSize="9" color="#797979" fontStyle="italic" width="59"/>
	<s:Label x="202" y="16" text="inscripción"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:TextInput id="_nombreEmpresa" x="113" y="55" width="484" change="dataChange();"
				 fontWeight="bold" maxChars="50" tabIndex="1"/>
	<s:TextInput x="113" y="85" id="_razonSocial" change="dataChange();" width="484" maxChars="50" tabIndex="2"/>
	<s:Label x="27.5" y="206" text="Responsable :" />
	<s:TextInput x="113" y="201" id="_representante" width="318" maxChars="50" tabIndex="2" editable="false"/>
	<s:Label x="49.5" y="238" text="Contacto :" />
	<s:TextInput x="113" y="233" id="_contacto" width="318" maxChars="50" tabIndex="2" editable="false"/>
	<s:TextInput x="113" y="115" id="_rfc" change="dataChange();" width="191" maxChars="50" tabIndex="3" restrict="A-Z 0-9 ^\ "/>
	<s:Label x="47.5" y="278" text="Dirección :" />
	<s:TextInput x="113" y="273" id="_calle" change="dataChange();" width="318" maxChars="255" tabIndex="7"/>
	<s:TextInput x="440" y="273" id="_numeroExterior" change="dataChange();" width="48" maxChars="10" tabIndex="8" restrict="0-9"/>
	<s:TextInput x="496" y="273" id="_numeroInterior" change="dataChange();" width="40" maxChars="5" tabIndex="9" restrict="0-9 A-Z "/>
	<s:TextInput x="541" y="273" id="_cp" change="dataChange();" width="55" restrict="0-9" maxChars="5" tabIndex="10"/>
	<s:TextInput x="113" y="314" id="_ciudad" change="dataChange();" width="152" tabIndex="11"/>
	<s:Label x="113" y="344" text="entre calles"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:TextInput x="113" y="354" id="_entreCalles" change="dataChange();" width="319" tabIndex="11"/>
	<s:Label x="45.5" y="461" text="Teléfonos :" />
	<s:Label x="72.5" y="120" text="RFC :" />
	<s:Label x="59.5" y="496" text="E- Mail :" />
	<s:TextInput x="113" y="456" id="_telefonoCasa" change="dataChange();" width="152" tabIndex="14"/>
	<s:TextInput x="272" y="456" id="_telefonoMovil" change="dataChange();" width="160" tabIndex="15"/>
	<s:TextInput x="113" y="494" id="_mailPrincipal" change="dataChange();" width="152" tabIndex="17"/>
	<s:TextInput x="272" y="494" id="_mailSecundario" change="dataChange();" width="160" tabIndex="18"/>
	<s:TextInput  x="201" y="25" id="_fechaInscripcion"  change="dataChange();" width="103"/>
	<s:Label x="39.5" y="389" text="Referencia :" />
	<s:TextArea x="113" y="386" id="_referencia" change="dataChange();" width="484" height="48" tabIndex="21"/>
	<s:Label x="74.5" y="150" text="Giro :" />
	<s:TextArea x="113" y="145" id="_giro" change="dataChange();" width="484" height="48" tabIndex="21"/>
	<s:TextInput x="113" y="25" id="_numeroCliente" change="dataChange();" width="80" editable="true" fontWeight="bold" textAlign="left"/>
	
	<s:DataGrid height="535" dataProvider="{_DataResult}" id="_dataList" selectionChange="onDataSelect();" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;!_updateData}" width="467" x="631" y="55">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="No." dataField="_numeroCliente" width="50"/>
				<s:GridColumn headerText="Nombre" dataField="_nombreEmpresa"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	<s:Button label="Nuevo" width="80" enabled="{_dataReady}" visible="{!_newData&amp;&amp;!_updateData}" click="newData();" x="112" y="598"/>
	<s:Button label="Cancelar" width="80" enabled="{_dataReady}" visible="{_newData||_updateData}" click="cancel();" x="200" y="598"/>
	<s:Button label="Aceptar" width="80" enabled="{_dataReady}" visible="{_newData}" click="createData();" x="112" y="598"/>
	<s:Button label="Eliminar" width="80" enabled="{_dataReady&amp;&amp;!_newData}" visible="{!_newData&amp;&amp;!_updateData}" click="deleteDataAlert();" x="200" y="598"/>
	<s:Button label="Actualizar" width="80" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_updateData}" visible="{_updateData&amp;&amp;!_newData}" click="updateData();" x="112" y="598"/>
	<s:Button label="Regresar" click="closeWindow();" width="187"  enabled="{!_newData}" x="911" y="598"/>
	
	<s:ComboBox 	x="702" id="_searchType" 	dataProvider="{_searchTypes}" 	width="92" y="20" change="updateFilter();"/>
	<s:TextInput 	x="802" id="_searchField" 	change="search();" 		width="296" enabled="{!_newData}" y="20"/>
	<s:Label x="635" text="Filtrar por :" textAlign="right" y="27"/>
	<s:Button x="631" y="598" label="Actualizar Lista " width="159" click="getData();">
		<s:icon>@Embed(source='../../assets/Icons/Buttons/refresh.png')</s:icon>
	</s:Button>
	<s:ComboBox  x="440" y="314" id="_estado" change="dataChange();" width="156" dataProvider="{ConstantData.NationalStates}" labelField="label" tabIndex="13"/>
	<s:ComboBox  x="312" y="115" id="_idTipoCliente" change="dataChange();" width="119" dataProvider="{_tipoCliente}" labelField="label" tabIndex="13"/>
	<s:ComboBox  x="439" y="115" id="_idEstatus" change="dataChange();" width="157" dataProvider="{_estatusCliente}" labelField="label" tabIndex="13"/>
	
	<s:Label x="273" y="304" text="colonia"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:TextInput x="272" y="314" id="_colonia" change="dataChange();" width="159" tabIndex="11"/>
	<s:Label x="441.5" y="446" text="oficina"  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:Label x="563" y="446" text="ext."  fontSize="9" color="#797979" fontStyle="italic"/>
	<s:TextInput x="562" y="456" id="_ext" change="dataChange();" width="33" maxChars="5" tabIndex="9" restrict="0-9 A-Z "/>
	<s:TextInput x="440" y="456" id="_telefonoOficina" change="dataChange();" width="116" tabIndex="16" restrict="0-9 "/>
	<s:Button x="440" y="200" width="30" click="openPopUp('fiscales.Fiscales_Representantes',true)"
			  enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;!_updateData}"
			  skinClass="spark.skins.spark.ButtonSkin"  >
		<s:icon>@Embed(source='../../assets/Icons/Buttons/Edit.png')</s:icon>
	</s:Button>
	<s:Button x="440" y="232" width="30" click="openPopUp('fiscales.Fiscales_Contactos',true)"
			  enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;!_updateData}"
			  skinClass="spark.skins.spark.ButtonSkin"  >
		<s:icon>@Embed(source='../../assets/Icons/Buttons/Edit.png')</s:icon>
	</s:Button>
	<s:Button x="478" y="200" width="119" height="23" label="Responsable"
			  click="openPopUp('fiscales.Fiscales_Representantes',true)"
			  enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;!_updateData}"  />
	<s:CheckBox x="483" y="202" enabled="false" id="_tieneRepresentante"/>
	<s:Button x="478" y="232" width="119" height="23" label="Contacto"
			  click="openPopUp('fiscales.Fiscales_Contactos',true)"
			  enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;!_updateData}"  />
	<s:Button x="446" y="353" width="150" height="23" label="Recolección"
			  click="openPopUp('fiscales.Fiscales_Recoleccion',true)"
			  enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;!_updateData}" />
	
	<s:Button x="113" y="524" label="Equipos" width="150"
			  click="openPopUp(&quot;equipos.Equipos&quot;,true);"
			  enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;!_updateData}" />
	
	<s:CheckBox x="119" y="530" enabled="false" id="_tieneServicios"/>
	<s:CheckBox x="452" y="355" enabled="false" id="_tieneRecoleccion"/>
	<s:CheckBox x="484" y="234" enabled="false" id="_tieneContacto"/>
	
</s:TitleWindow>
