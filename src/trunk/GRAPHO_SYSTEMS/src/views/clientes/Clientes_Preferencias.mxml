<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="618" height="352" 
	layout="absolute" 
	horizontalCenter="0" 
	title="Preferencias Personales" 
	verticalCenter="0"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	showCloseButton="true">

	<mx:Script>
		<![CDATA[
			import mx.random.constants.ConstantData;
			
			import mx.random.constants.Catalogs;
			import mx.random.windowManagers.PopManager;
			import mx.random.constants.Languages;
			import mx.random.forms.Validator;
			import mx.random.dataManagers.EventManager;
			import mx.random.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.web.WebApplication;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.rpc.remoting.RemoteObject;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 		= new RemoteObject();
[Bindable]	private var _Data:DataManager 				= new DataManager(this);
[Bindable]	private var _DataResult:ArrayCollection 		= new ArrayCollection();			
			private var _eventManager:EventManager 		= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------

[Bindable]	public var _dataReady:Boolean 			= false;
[Bindable]	public var _newData:Boolean 			= false;
[Bindable]	public var _updateData:Boolean 			= false;

			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number 		= 0;
			private var _selectedName:String 	= "";
			private var _serviceName  			= "Clientes_Preferencias";
			private var _mainId  				= "_idPreferencia";
			private var _relationId  			= "_idCliente";
			private var _mainFocusField:String  = "_preferenciaComida";
//<------->			

[Bindable]	private var _idCliente:String 		= "";
[Bindable]	private var _idPreferencia:String 		= "";
[Bindable]	private var _nombreCliente:String 	= "";
	
			public function set relationIdValue(value:String):void { _idCliente = value }
			public function set nombreCliente(value:String):void	{
				_nombreCliente = value;
			}
			
			//-----------Local Vars -----------

			
//---------------------------- Context ---------------------------------------------            

   			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
			}

			public function set workManager(value:Object):void{
				_workManager = value;
			}

			public function set webApplication(value:WebApplication):void{
				_webApplication = value;
				initView();
			}
			public function get webApplication():WebApplication{ return _webApplication; } 
						
//---------------------------- Context ---------------------------------------------  

//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				return {webApplication: _webApplication,
						workManager: this
						}					
			}

			private function addValidations():void{
				Valid.changeLanguage(Languages.SPANISH);
	
			


				var validFields:ArrayCollection = Valid.validFields;
				for(var n:Number = 0;n<validFields.length;n++){					
					this[validFields[n].obj.name].addEventListener(Event.CHANGE,onFocusOut);
				}
				Valid.setErrorKnot(Validator.CIRCLE_KNOT,0xFF0000);
			}

			private function onFocusOut(e:Event):void{
				if(_newData||_updateData) Valid.validateAll();//Valid.validateOne(e.currentTarget.name);
			}
			
			private function extraCreateData(params:Object):Object{
				params[_relationId] = this[_relationId];
				//params["_newsImage"] = _image;
				//params['_fechaNacimiento'] 	= _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;
				return params;
			}
			
			private function createRecordExtras():void{
				//_image = "defaultNew.jpg";
				/*_day.selectedIndex 	= 0;
				_month.selectedIndex 	= 0;
				_year.selectedIndex 	= 0;*/
			}
			
			private function extraUpdateData(params:Object):Object{	
				//params['_fechaNacimiento'] = _year.selectedItem.label+'-'+_month.selectedItem.value+'-'+_day.selectedItem.value;			
				return params;
			}
			
			private function loadExtraFields(params:Object):void{
				//_image = params["_newsImage"];
				/*
				if(tempDate){
					var temp:Array 		 = tempDate.split('-');
					_day.selectedIndex 	 = parseInt(temp[2]);
					_month.selectedIndex = parseInt(temp[1]);
					_year.selectedIndex  = ConstantData.FindYearindex(temp[0]);
				}else{
					_day.selectedIndex 		= 0;
					_month.selectedIndex 	= 0;
					_year.selectedIndex 	= 0;
				}*/
			}
			
			private function forceImports():void{
				Catalogs;
			}
			
			public function initView():void{
				forceImports();
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = ["_idPreferencia","_idCliente"];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
				addValidations();
							
			}
			
			public function imageUploadReady(data:Object):void{
				
			}

			// ------------------- View Extra Data -------------------------------			

			private function initData():void{
				_MainService.getFields();
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_dataReady = false;
			}
			
			public function closeWindow():void{
            		dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
            		PopUpManager.removePopUp(this);
            }
            
//-------------------------------- MainInit --------------------------------------
			
			private function newData():void{
				_Data.clear();
				_newData = true;
				_updateData = false;				
				this[_mainFocusField].setFocus();
				createRecordExtras();
				Valid.validateAll();
			}
			
			private function createData():void{
				if(Valid.validateAll()){
					_dataReady = false;					
					var params:Object = extraCreateData(_Data.makeData());
					_MainService.createRecord(params);
					_MainService.createRecord.addEventListener(ResultEvent.RESULT,onCreateComplete);
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}

			private function updateData():void{
				if(Valid.validateAll()){
					_dataReady = false;
					var params:Object = extraUpdateData(_Data.makeData());
					params[_mainId] = this[_mainId];
					_MainService.updateRecord(params);
					_MainService.updateRecord.addEventListener(ResultEvent.RESULT,onUpdateComplete);					
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			private function cancel():void{				
				resetBooleans();
				Valid.validateAll();
			}
			
			private function resetBooleans():void{
				_newData = false;
				_updateData = false;
			}

			private function dataChange():void{
				_updateData = true;
			}
			
			
			
			
			
			
//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
						getData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataResult= new ArrayCollection();								
			}
			
			private function getData():void{
//-------->			
				var params:Object = new Object();
				params[_relationId] = this[_relationId];  
				_MainService.getRecordsById(params);
				_MainService.getRecordsById.addEventListener(ResultEvent.RESULT,onGetDataResult);
			}
			
			private function onGetDataResult(e:ResultEvent):void{
				_MainService.getRecordsById.removeEventListener(ResultEvent.RESULT,onGetDataResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No hay datos para este registro...\nCrear un registro nuevo?","Atenci√≥n",Alert.OK|Alert.NO,this,alertNewHandler);
				}else{			
					_Data.loadData(_DataResult[_dataIndex]);					
					loadExtraFields(_DataResult[_dataIndex]);
					this[_mainId] = _DataResult[_dataIndex][_mainId];
				}
				_dataReady = true;
				resetBooleans();
				
			}
			
			
			private function alertNewHandler(e:CloseEvent):void{
				if(e.detail == Alert.OK){
					newData()
				}
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}			
			
			private function onCreateComplete(e:ResultEvent):void{				
				_MainService.createRecord.removeEventListener(ResultEvent.RESULT,onCreateComplete);
				_dataIndex = 0;
				_workManager.getData();
				getData();
			}
			
			private function onUpdateComplete(e:ResultEvent):void{
				_MainService.updateRecord.removeEventListener(ResultEvent.RESULT,onUpdateComplete);
				_workManager.getData();
				getData();
			}					
			
//-------------------------------- ResultsEvents --------------------------------------	

//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean=false):void{
				var pop:TitleWindow = PopUpManager.createPopUp(this, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
				pop.name = popUpName;
				pop.addEventListener(CloseEvent.CLOSE, closePopup);
				if(pop.hasOwnProperty("context")){
					Object(pop).context = viewContext;
				}
				PopUpManager.centerPopUp(pop);
			}
			
			private function closePopup(e:CloseEvent):void{
	            PopUpManager.removePopUp(e.target as TitleWindow);
			}
//-------------------------------- POP UP WINDOW --------------------------------------
				
			
		]]>
	</mx:Script>
<mx:Label x="52" y="14" text="Cliente :" textAlign="right"/>
<mx:TextInput x="113" y="14" change="dataChange();" width="494" text="{_nombreCliente}" editable="false"/>

	<mx:Button label="Cancelar" width="77" enabled="{_dataReady}" visible="{_newData||_updateData}" click="cancel();" x="196" y="289"/>
	<mx:Button label="Actualizar" width="78" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_updateData}" visible="{_updateData&amp;&amp;!_newData}" click="updateData();" x="113" y="289"/>
	<mx:Button label="Regresar" click="closeWindow();" width="150"  enabled="{!_newData}" x="457" y="289"/>
	<mx:Button label="Aceptar" width="78" enabled="{_dataReady}" visible="{_newData}" click="createData();" x="113" y="289"/>
	<mx:Label x="447" y="75" text="flores" textAlign="right" fontSize="9" fontStyle="italic" color="#C1C1C1"/>
	<mx:Label x="113" y="75" text="m√∫sica" textAlign="right" fontSize="9" fontStyle="italic" color="#C1C1C1"/>
	<mx:Label x="113" y="37" text="comida" textAlign="right" fontSize="9" fontStyle="italic" color="#C1C1C1"/>
	<mx:Label x="23" y="55" text="Preferencias :" textAlign="right"/>
	<mx:Label x="46" y="123" text="Hobbies :" textAlign="right"/>
	<mx:TextInput x="447" y="91" id="_preferenciaFloral" change="dataChange();" width="160"/>
	<mx:TextInput x="279" y="53" id="_preferenciaBebida" change="dataChange();" width="160"/>
	<mx:TextInput x="113" y="149" id="_alergias" change="dataChange();" width="328"/>
	<mx:TextInput x="279" y="91" id="_preferenciaTelevision" change="dataChange();" width="160"/>
	<mx:TextInput x="113" y="209" id="_discapacidad" change="dataChange();" width="326"/>
	<mx:Label x="279" y="73" text="televisi√≥n" textAlign="right" fontSize="9" fontStyle="italic" color="#C1C1C1"/>
	<mx:TextInput x="113" y="53" id="_preferenciaComida" change="dataChange();" width="160"/>
	<mx:TextInput x="113" y="91" id="_preferenciaMusical" change="dataChange();" width="160"/>
	<mx:TextInput x="447" y="52" id="_preferenciaActividadesPlaya" change="dataChange();" width="160"/>
	<mx:Label x="447" y="36" text="actividedes de playa" textAlign="right" fontSize="9" fontStyle="italic" color="#C1C1C1"/>
	<mx:TextInput x="113" y="121" id="_hobbies" change="dataChange();" width="328"/>
	<mx:Label x="47" y="151" text="Alergias :" textAlign="right"/>
	<mx:CheckBox x="113" y="179" id="_esDiscapacitado" change="dataChange();" label="Padece alguna discapacidad" width="182"/>
	<mx:Label x="19" y="211" text="Discapacidad :" textAlign="right"/>
	<mx:Label x="10" y="237" text="Observaciones :" textAlign="right"/>
	<mx:TextArea x="113" y="237" id="_observaciones" change="dataChange();" width="494" enabled="{_esDiscapacitado.selected}"/>
	<mx:Label x="279" y="36" text="bebidas" textAlign="right" fontSize="9" fontStyle="italic" color="#C1C1C1"/>
	
</mx:TitleWindow>
