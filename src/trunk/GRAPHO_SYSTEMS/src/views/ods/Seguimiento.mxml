<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="928" height="444" backgroundAlpha="1.0" contentBackgroundColor="#D5E7FB"
			   title="Seguimiento de Orden de Servicio">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Button label="Regresar" click="closeWindow();" width="308"  enabled="{!_newData}" y="364" x="591"/>
	<s:Button label="Administración de Órdenes de Servicio" click="openPopUp('ods.Administracion_Ordenes',true)" width="308"  enabled="{!_newData}" y="364" x="275"/>
	<s:Button x="841" y="22" width="77" height="23" label="Buscar" click="searchOrder();"
			  enabled="{!_newData}"/>
	<s:Button x="10" y="33" width="192" label="   Apertura de Orden"
			  click="openPopUp('ods.Apertura',true)"
			  skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tieneServicio" x="16" y="39" enabled="false"
				selected="{_orderHeader._tieneServicio}"/>
	<s:Button x="10" y="65" width="192" label="   Prediagnóstico"
			  click="openPopUp('ods.Prediagnostico',true)"
			  skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tienePrediagnostico" x="16" y="71" enabled="false"
				selected="{_orderHeader._tienePrediagnostico}"/>
	<s:Button x="10" y="97" width="192" label="   Cotización Prediagnóstico"
			  click="openPopUp('ods.Prediagnostico_Cotizacion',true)"
			  skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tieneCotizacionPrediagnostico" x="16" y="103" enabled="false"
				selected="{_orderHeader._tieneCotizacionPrediagnostico}"/>
	<s:Button x="10" y="129" width="192" label="   Vta de Prediagnóstico"
			  click="openPopUp('ods.Prediagnostico_Venta',true)"
			  skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tieneVentaPrediagnostico" x="16" y="135" enabled="false"
				selected="{_orderHeader._tieneVentaPrediagnostico}"/>
	<s:Button id="_tabConfirmacion" x="10" y="161" width="192" label="   Confirmación"
			  click="openPopUp('ods.Confirmacion',true)" skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tieneConfirmacion" x="16" y="167" enabled="false"
				selected="{_orderHeader._tieneConfirmacion}"/>
	<s:Button x="10" y="193" width="192" label="   Diagnóstico"
			  click="openPopUp('ods.Diagnostico',true)"
			  skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tieneDiagnostico" x="16" y="199" enabled="false"
				selected="{_orderHeader._tieneDiagnostico}"/>
	<s:Button x="10" y="226" width="192" label="   Cotización Diagnóstico"
			  click="openPopUp('ods.Diagnostico_Cotizacion',true)"
			  skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tieneCotizacionDiagnostico" x="16" y="232" enabled="false"
				selected="{_orderHeader._tieneCotizacionDiagnostico}"/>
	<s:Button x="10" y="258" width="192" label="   Venta y Facturación"
			  click="openPopUp('ods.Venta_Facturacion',true)"
			  skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tieneVentaDiagnostico" x="16" y="264" enabled="false"
				selected="{_orderHeader._tieneVentaDiagnostico}"/>
	<s:Button x="10" y="290" width="192" label="   Ejecución de Servicio"
			  click="openPopUp('ods.Ejecucion_Servicio',true)"
			  skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tieneEjecucionServicio" x="16" y="296" enabled="false"
				selected="{_orderHeader._tieneEjecucionServicio}"/>
	<s:Button x="10" y="322" width="192" label="   Cierre de Orden"
			  click="openPopUp('ods.Cierre_Orden',true)"
			  skinClass="skins.Custom_Button_Light_Skin"/>
	<s:CheckBox id="_tieneCierreOrden" x="16" y="328" enabled="false"
				selected="{_orderHeader._tieneCierreOrden}"/>
	<s:Label x="276" y="239" color="#767474" fontSize="10" fontStyle="italic" text="observaciones"/>
	<s:TextArea id="_nota" x="275" y="252" width="625" height="78" contentBackgroundColor="#e7e7e7"
				enabled="false" text="{_orderHeader._nota}"/>
	<s:TextInput id="_nombreEmpresa" x="274" y="62" width="310" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_cliente._nombreEmpresa}"/>
	<s:TextInput id="_ciudad" x="274" y="100" width="150" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_cliente._ciudad}"/>
	<s:TextInput id="_nombreEstado" x="434" y="100" width="150" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_cliente._nombreEstado}"/>
	<s:Label x="435" y="89" color="#767474" fontSize="10" fontStyle="italic" text="estado"/>
	<s:Label x="274" y="89" color="#767474" fontSize="10" fontStyle="italic" text="ciudad"/>
	<s:TextInput id="_telefonoCasa" x="592" y="62" width="150" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_cliente._telefonoCasa}"/>
	<s:TextInput id="_telefonoOficina" x="750" y="62" width="150" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_cliente._telefonoOficina}"/>
	<s:TextInput id="_mailSecundario" x="750" y="100" width="150" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_cliente._mailSecundario}"/>
	<s:TextInput id="_mailPrincipal" x="592" y="100" width="150" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_cliente._mailPrincipal}"/>
	<s:Label x="593" y="90" color="#767474" fontSize="10" fontStyle="italic" text="mails"/>
	<s:Label x="593" y="51" color="#767474" fontSize="10" fontStyle="italic" text="teléfonos"/>
	<s:Label x="223" y="68" text="Cliente :"/>
	<s:Label x="274" y="51" color="#767474" fontSize="10" fontStyle="italic" text="nombre"/>
	<s:Label x="351" y="11" color="#767474" fontSize="10" fontStyle="italic" text="fecha"/>
	<s:Label x="427" y="11" color="#767474" fontSize="10" fontStyle="italic" text="hora"/>
	<s:Label x="503" y="10" color="#767474" fontSize="10" fontStyle="italic" text="estatus"/>
	<s:Label x="274" y="11" color="#767474" fontSize="10" fontStyle="italic" text="número"/>
	<s:Label x="240" y="27" fontWeight="bold" text="OS :"/>
	<s:Label x="590" y="10" color="#767474" fontSize="10" fontStyle="italic" text="área de soporte"/>
	<s:Label x="727" y="10" color="#767474" fontSize="10" fontStyle="italic" text="servicio"/>
	<s:TextInput id="_nombreContacto" x="274" y="140" width="310" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_orderHeader._nombreContacto}"/>
	<s:TextInput id="_operador" x="274" y="173" width="310" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_orderHeader._operador}"/>
	<s:Label x="210" y="179" text="Operador :"/>
	<s:Label x="274" y="129" color="#767474" fontSize="10" fontStyle="italic" text="reportó"/>
	<s:Label x="592" y="129" color="#767474" fontSize="10" fontStyle="italic" text="atendió"/>
	<s:TextInput id="_nombreEmpleado" x="592" y="140" width="308" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_orderHeader._nombreEmpleado}"/>
	<s:TextInput id="_serie" x="750" y="212" width="70" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_equipo._serie}"/>
	<s:TextInput id="_modelo" x="592" y="212" width="150" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_equipo._modelo}"/>
	<s:Label x="593" y="201" color="#767474" fontSize="10" fontStyle="italic" text="modelo"/>
	<s:Label x="276" y="199" color="#767474" fontSize="10" fontStyle="italic" text="tecnologia"/>
	<s:Label x="436" y="200" color="#767474" fontSize="10" fontStyle="italic" text="fabricante"/>
	<s:Label x="751" y="201" color="#767474" fontSize="10" fontStyle="italic" text="no. serie"/>
	<s:Label x="223" y="217" text="Equipo :"/>
	<s:TextInput id="_nombreTipo" x="274" y="212" width="150" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_equipo._nombreTipo}"/>
	<s:TextInput id="_nombreMarca" x="434" y="212" width="150" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_equipo._nombreMarca}"/>
	<s:Label x="831" y="200" color="#767474" fontSize="10" fontStyle="italic" text="año de fab."/>
	<s:TextInput id="_anioFabricacion" x="830" y="212" width="70" contentBackgroundColor="#e7e7e7"
				 enabled="false" fontStyle="italic" text="{_equipo._anioFabricacion}"/>
	<s:ComboBox id="_idAreaSoporteTecnico" x="592" y="22" width="126"
				contentBackgroundColor="#E7E7E7" dataProvider="{SystemGlobals.AREAS_SOPORTE}"
				enabled="false" fontWeight="bold" labelField="_areaSoporteTecnico"
				selectedIndex="{_orderHeader._idAreaSoporteTecnico}"></s:ComboBox>
	<s:ComboBox id="_idTipoServicio" x="726" y="22" width="107"
				contentBackgroundColor="#E7E7E7" dataProvider="{SystemGlobals.TIPOS_SERVICIO}"
				enabled="false" fontWeight="bold" labelField="_nombre"
				selectedIndex="{_orderHeader._idTipoServicio}"></s:ComboBox>
	<s:ComboBox id="_idEstatus" x="503" y="22" width="81"
				contentBackgroundColor="#E7E7E7" dataProvider="{SystemGlobals.ORDEN_ESTATUS}"
				enabled="false" fontWeight="bold" labelField="_nombreEstatus"
				selectedIndex="{_orderHeader._idEstatus}"></s:ComboBox>
	<s:TextInput id="_idOrden" x="273" y="23" width="70" contentBackgroundColor="#FFFFFF"
				 fontWeight="bold" keyDown="_idOrden_keyDownHandler(event)" textAlign="center"/>
	<s:TextInput id="_fechaCreacion" x="349" y="23" width="70" contentBackgroundColor="#E7E7E7"
				 enabled="false" fontWeight="bold" text="{_orderHeader._fechaCreacion}" textAlign="center"/>
	<s:TextInput id="_horaCreacion" x="425" y="23" width="70" contentBackgroundColor="#E7E7E7"
				 enabled="false" fontWeight="bold" text="{_orderHeader._horaCreacion}" textAlign="center"/>
	
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.random.constants.Catalogs;
			import mx.random.constants.ConstantData;
			import mx.random.constants.Languages;
			import mx.random.constants.SystemGlobals;
			import mx.random.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.dataManagers.EventManager;
			import mx.random.forms.Validator;
			import mx.random.web.WebApplication;
			import mx.random.windowManagers.PopManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 		= new RemoteObject();
			[Bindable]	private var _Data:DataManager 				= new DataManager(this);
			[Bindable]	private var _DataResult:ArrayCollection 		= new ArrayCollection();			
			private var _eventManager:EventManager 		= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------
			
			[Bindable]	public var _dataReady:Boolean 			= false;
			[Bindable]	public var _newData:Boolean 			= false;
			[Bindable]	public var _updateData:Boolean 			= false;
			
			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number = 0;
			private var _selectedName:String = "";
			private var _serviceName  		= "Ordenes";
			private var _mainId  			= "_idOrden";
			private var _mainFocusField:String      = "_operador";
			[Bindable] private var _orderHeader:Object = {};
			[Bindable] private var _cliente:Object = {};
			[Bindable] private var _equipo:Object = {};
			//-----------Local Vars -----------
			
			//---------------------------- Context ---------------------------------------------            
			
			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
			}
			
			public function set workManager(value:Object):void{
				_workManager = value;
			}
			
			public function set webApplication(value:WebApplication):void{
				_webApplication = value;
				initView();
			}
			public function get webApplication():WebApplication{ return _webApplication; } 
			
			//---------------------------- Context ---------------------------------------------  
			
			//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				var _currentOrderId = -1;
				if(_DataResult.length > 0){
					_currentOrderId = _DataResult[0]._idOrden;
				}
				return {webApplication: _webApplication,
					workManager: this,
					cliente: _cliente,
					idOrden: _currentOrderId
				}					
			}

			public function initView():void{
				//forceImports();
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = [];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
			}

			
			// ------------------- View Extra Data -------------------------------
			
			
			private function initData():void{
				_MainService.getFields("columnsFromFollowUpForm");
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_dataReady = false;
			}
			
			private function clearExtraFields():void{
				_fechaCreacion.text = "";
				_horaCreacion.text = "";
				_nombreEmpleado.text = "";
				_nombreContacto.text = "";
				_tieneServicio.selected = false;
				_tienePrediagnostico.selected = false;
				_tieneCotizacionPrediagnostico.selected = false;
				_tieneVentaPrediagnostico.selected = false;
				_tieneConfirmacion.selected = false;
				_tieneDiagnostico.selected = false;
				_tieneCotizacionDiagnostico.selected = false;
				_tieneVentaDiagnostico.selected = false;
				_tieneEjecucionServicio.selected = false;
				_tieneCierreOrden.selected = false;
			}
			
			public function closeWindow():void{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				PopUpManager.removePopUp(this);
			}
			
			//-------------------------------- MainInit --------------------------------------
		

			
			//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataResult= new ArrayCollection();				
			}
			
			private function searchOrder():void{
				if(_idOrden.text != ""){
					_MainService.getFollowUpData(_idOrden.text);
					_MainService.getClientFromOrder(_idOrden.text);
					_MainService.getEquipmentFromOrder(_idOrden.text);//Obtiene el equipo actual
					_MainService.getFollowUpData.addEventListener(ResultEvent.RESULT,onGetDataResult);
					_MainService.getClientFromOrder.addEventListener(ResultEvent.RESULT,onGetDataCompanyResult);
					_MainService.getEquipmentFromOrder.addEventListener(ResultEvent.RESULT,onGetDataSystemResult);
				}				
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}
			



			//-------------------------------- ResultsEvents --------------------------------------			
			private function onGetDataResult(e:ResultEvent):void{
				_MainService.getFollowUpData.removeEventListener(ResultEvent.RESULT,onGetDataResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No existe orden con el id especificado","Atención");
					clearExtraFields();
				}else{
					if(_DataResult[0]._activarTabConfirmacionDiagnostico != 1){
						this._tabConfirmacion.enabled = false;
					}else{
						this._tabConfirmacion.enabled = true;
					}
					_orderHeader = _DataResult[0];//Sólo debe de haber un registro o ninguno
				}
				_dataReady = true;
			}
			
			private function onGetDataCompanyResult(e:ResultEvent):void{
				_MainService.getClientFromOrder.removeEventListener(ResultEvent.RESULT,onGetDataCompanyResult);
				var resArr:ArrayCollection;
				resArr = Converter.arrayConverter(e.result);
				if(resArr.length > 0){
					resArr[0]._nombreEstado = ConstantData.NationalStates[Number(resArr[0]._estado)].label;
					_cliente = resArr[0]; //Sólo debe de haber un registro o ninguno
				}else{
					_cliente = {};
				}
			}
			
			private function onGetDataSystemResult(e:ResultEvent):void{
				_MainService.getSystemFromOrder.removeEventListener(ResultEvent.RESULT,onGetDataSystemResult);
				var resArr:ArrayCollection;
				resArr = Converter.arrayConverter(e.result);
				if(resArr.length > 0){
					_equipo = resArr[0]; //Sólo debe de haber un registro o ninguno
				}else{
					_equipo = {};
				}
			}
			
			private function searchKeyEnter(e:KeyboardEvent):void{
				if(e.charCode == 13){
					searchOrder();
				}
			}
			//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean = true):void{
				if(_DataResult.length > 0 || popUpName == 'ods.Administracion_Ordenes'){
					var pop:TitleWindow = PopUpManager.createPopUp(SystemGlobals.mainStage as DisplayObject, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
					pop.name = popUpName;
					pop.addEventListener(CloseEvent.CLOSE, closePopup);
					if(pop.hasOwnProperty("context")){
						Object(pop).context = viewContext;
					}
					PopUpManager.centerPopUp(pop);	
				}
			}
			
			private function closePopup(e:CloseEvent):void{
				PopUpManager.removePopUp(e.target as TitleWindow);
			}
			
			//-------------------------------- POP UP WINDOW --------------------------------------
			
			
			protected function _idOrden_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == 13){
					searchOrder();
				}
				
			}
			
		]]>
	</fx:Script>
	
</s:TitleWindow>
