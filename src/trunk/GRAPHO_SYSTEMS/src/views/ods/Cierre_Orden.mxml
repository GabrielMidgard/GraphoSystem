<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="794" height="688" backgroundAlpha="1.0" contentBackgroundColor="#D5E7FB"
			   title="Cierre de Orden">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Button label="Regresar" click="closeWindow();" width="145"  enabled="{!_newData}" y="608" x="10"/>
	<mx:TabNavigator x="10" y="10" width="759" height="585">
		<s:NavigatorContent width="100%" height="100%" label="General">
			<s:Label x="470" y="356" text="Fin Servicio :"/>
			<s:Label x="544" y="338" color="#767474" fontSize="10" fontStyle="italic" text="fecha"/>
			<s:Label x="622" y="338" color="#767474" fontSize="10" fontStyle="italic" text="hora"/>
			<s:TextInput id="_fechaFinServicio" x="544" y="349" width="70" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" enabled="false" fontWeight="normal"
						 textAlign="center"/>
			<s:Label x="6" y="401" text="Tiempo de Garantía :"/>
			<s:TextInput id="_tiempoGarantia" x="123" y="395" width="339" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" fontWeight="normal" textAlign="center"/>
			<s:TextInput id="_horaFinServicio" x="621" y="349" width="61" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" enabled="false" fontWeight="normal"
						 textAlign="center"/>
			<s:ComboBox id="_tiempoUnidadPruebas" x="179" y="349" width="75" change="dataChange();"
						contentBackgroundColor="#D5FBDB"
						dataProvider="{ConstantData.TiempoEstimado}" enabled="false"
						fontStyle="italic"> </s:ComboBox>
			<s:ComboBox id="_tiempoUnidadTotalServ" x="369" y="349" width="93" change="dataChange();"
						contentBackgroundColor="#D5FBDB"
						dataProvider="{ConstantData.TiempoEstimado}" enabled="false"
						fontStyle="italic"> </s:ComboBox>
			<s:TextInput id="_tiempoNumeroTotalServ" x="313" y="349" width="48"
						 change="dataChange();" contentBackgroundColor="#D5FBDB" enabled="false"
						 fontStyle="normal" textAlign="center"/>
			<s:Label x="259" y="352" text="Tiempo :"/>
			<s:Label x="313" y="338" color="#767474" fontSize="10" fontStyle="italic" text="total servicio"/>
			<s:TextInput id="_tiempoNumeroPruebas" x="123" y="349" width="48" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" enabled="false" fontStyle="normal"
						 textAlign="center"/>
			<s:Label x="69" y="352" text="Tiempo :"/>
			<s:Label x="123" y="338" color="#767474" fontSize="10" fontStyle="italic" text="en pruebas"/>
			<s:Label x="125" y="239" color="#767474" fontSize="10" fontStyle="italic" text="observaciones"/>
			<s:TextArea id="_nota" x="124" y="252" width="625" height="78" contentBackgroundColor="#e7e7e7"
						enabled="false" text="{_orderHeader._nota}"/>
			<s:TextInput id="_nombreEmpresa" x="123" y="62" width="310" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_cliente._nombreEmpresa}"/>
			<s:TextInput id="_ciudad" x="123" y="100" width="150" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_cliente._ciudad}"/>
			<s:TextInput id="_nombreEstado" x="283" y="100" width="150" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_cliente._nombreEstado}"/>
			<s:Label x="284" y="89" color="#767474" fontSize="10" fontStyle="italic" text="estado"/>
			<s:Label x="123" y="89" color="#767474" fontSize="10" fontStyle="italic" text="ciudad"/>
			<s:TextInput id="_telefonoCasa" x="441" y="62" width="150" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_cliente._telefonoCasa}"/>
			<s:TextInput id="_telefonoOficina" x="599" y="62" width="150" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_cliente._telefonoOficina}"/>
			<s:TextInput id="_mailSecundario" x="599" y="100" width="150" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_cliente._mailSecundario}"/>
			<s:TextInput id="_mailPrincipal" x="441" y="100" width="150" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_cliente._mailPrincipal}"/>
			<s:Label x="442" y="90" color="#767474" fontSize="10" fontStyle="italic" text="mails"/>
			<s:Label x="442" y="51" color="#767474" fontSize="10" fontStyle="italic" text="teléfonos"/>
			<s:Label x="72" y="68" text="Cliente :"/>
			<s:Label x="123" y="51" color="#767474" fontSize="10" fontStyle="italic" text="nombre"/>
			<s:Label x="200" y="11" color="#767474" fontSize="10" fontStyle="italic" text="fecha"/>
			<s:Label x="276" y="11" color="#767474" fontSize="10" fontStyle="italic" text="hora"/>
			<s:Label x="352" y="10" color="#767474" fontSize="10" fontStyle="italic" text="estatus"/>
			<s:Label x="123" y="11" color="#767474" fontSize="10" fontStyle="italic" text="número"/>
			<s:Label x="89" y="27" fontWeight="bold" text="OS :"/>
			<s:Label x="439" y="10" color="#767474" fontSize="10" fontStyle="italic" text="área de soporte"/>
			<s:Label x="600" y="10" color="#767474" fontSize="10" fontStyle="italic" text="servicio"/>
			<s:TextInput id="_nombreContacto" x="123" y="140" width="310" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_orderHeader._nombreContacto}"/>
			<s:TextInput id="_operador" x="123" y="173" width="310" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_orderHeader._operador}"/>
			<s:Label x="59" y="179" text="Operador :"/>
			<s:Label x="123" y="129" color="#767474" fontSize="10" fontStyle="italic" text="reportó"/>
			<s:Label x="441" y="129" color="#767474" fontSize="10" fontStyle="italic" text="atendió"/>
			<s:TextInput id="_nombreEmpleado" x="441" y="140" width="308" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_orderHeader._nombreEmpleado}"/>
			<s:TextInput id="_serie" x="599" y="212" width="70" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_equipo._serie}"/>
			<s:TextInput id="_modelo" x="441" y="212" width="150" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_equipo._modelo}"/>
			<s:Label x="442" y="201" color="#767474" fontSize="10" fontStyle="italic" text="modelo"/>
			<s:Label x="125" y="199" color="#767474" fontSize="10" fontStyle="italic" text="tecnología"/>
			<s:Label x="285" y="200" color="#767474" fontSize="10" fontStyle="italic" text="fabricante"/>
			<s:Label x="600" y="201" color="#767474" fontSize="10" fontStyle="italic" text="no. serie"/>
			<s:Label x="72" y="217" text="Equipo :"/>
			<s:TextInput id="_nombreTipo" x="123" y="212" width="150" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_equipo._nombreTipo}"/>
			<s:TextInput id="_nombreMarca" x="283" y="212" width="150" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_equipo._nombreMarca}"/>
			<s:Label x="680" y="200" color="#767474" fontSize="10" fontStyle="italic" text="año de fab."/>
			<s:TextInput id="_anioFabricacion" x="679" y="212" width="70" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="italic" text="{_equipo._anioFabricacion}"/>
			<s:ComboBox id="_idAreaSoporteTecnico" x="441" y="22" width="150" change="dataChange();"
						contentBackgroundColor="#E7E7E7" dataProvider="{SystemGlobals.AREAS_SOPORTE}"
						enabled="false" fontWeight="bold" labelField="_areaSoporteTecnico"
						selectedIndex="{_orderHeader._idAreaSoporteTecnico}"></s:ComboBox>
			<s:ComboBox id="_idTipoServicio" x="598" y="22" width="151" change="dataChange();"
						contentBackgroundColor="#E7E7E7" dataProvider="{SystemGlobals.TIPOS_SERVICIO}"
						enabled="false" fontWeight="bold" labelField="_nombre"
						selectedIndex="{_orderHeader._idTipoServicio}"></s:ComboBox>
			<s:ComboBox id="_idEstatus" x="352" y="22" width="81" change="dataChange();"
						contentBackgroundColor="#D5FBDB"
						dataProvider="{SystemGlobals.ORDEN_ESTATUS}" enabled="true"
						fontWeight="bold" labelField="_nombreEstatus"
						selectedIndex="{_orderHeader._idEstatus}" tabIndex="1"></s:ComboBox>
			<s:TextInput id="_idOrden" x="122" y="23" width="70" contentBackgroundColor="#E7E7E7"
						 enabled="false" fontWeight="bold" text="{_orderHeader._idOrden}" textAlign="center"/>
			<s:TextInput id="_fechaCreacion" x="198" y="23" width="70" contentBackgroundColor="#E7E7E7"
						 enabled="false" fontWeight="bold" text="{_orderHeader._fechaCreacion}" textAlign="center"/>
			<s:TextInput id="_horaCreacion" x="274" y="23" width="70" contentBackgroundColor="#E7E7E7"
						 enabled="false" fontWeight="bold" text="{_orderHeader._horaCreacion}" textAlign="center"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Notas"
							show="navigatorcontent1_showHandler(event)">
			<s:TextArea id="_observacionesAccServicio" x="106" y="23" width="625" height="90"
						change="dataChange();" contentBackgroundColor="#D5FBDB" fontStyle="normal"
						tabIndex="1"/>
			<s:Label x="10" y="30" text="Observaciones :"/>
			<s:Label x="106" y="10" color="#767474" fontSize="10" fontStyle="italic" text="del servicio"/>
			<s:TextArea id="_observacionesServicio" x="106" y="134" width="625" height="90"
						change="dataChange();" contentBackgroundColor="#D5FBDB" fontStyle="normal"
						tabIndex="2"/>
			<s:Label x="6" y="141" text="Recomendación :"/>
			<s:Label x="106" y="121" color="#767474" fontSize="10" fontStyle="italic" text="del técnico:"/>
			<s:TextArea id="_observacionesClienteOrden" x="105" y="246" width="626" height="90"
						change="dataChange();" contentBackgroundColor="#D5FBDB" fontStyle="normal"
						tabIndex="3"/>
			<s:TextArea id="_interesCliente" x="105" y="357" width="626" height="90"
						change="dataChange();" contentBackgroundColor="#D5FBDB" fontStyle="normal"/>
			<s:Label x="54" y="357" text="Interés :"/>
			<s:Label x="105" y="344" color="#767474" fontSize="10" fontStyle="italic" text="del cliente por equipo"/>
			<s:Label x="10" y="268" text="Observaciones :"/>
			<s:Label x="108" y="232" color="#767474" fontSize="10" fontStyle="italic" text="del cliente en orden de servicio :"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Fallas">
			<s:Label x="53" y="289" text="Fallas :" textAlign="left"/>
			<s:Button label="Nuevo" width="80" enabled="{_dataReady&amp;&amp;_fallaSelected}" visible="false" y="342" x="1198"/>
			<s:Button label="Cancelar" width="80" enabled="{_dataReady}" visible="false" click="cancelPrediagnostic();" y="342" x="1286"/>
			<s:Button label="Aceptar" width="80" enabled="{_dataReady}" visible="false" y="342" x="1198"/>
			<s:Button label="Eliminar" width="80" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_fallaSelected}" visible="false" click="deleteDataAlert();" y="342" x="1286"/>
			<s:Button label="Actualizar" width="80" enabled="{_dataReady&amp;&amp;!_newData&amp;&amp;_updateData}" visible="false" y="342" x="1198"/>
			<s:DataGrid id="_listaFallas" x="99" y="280" width="402" height="261"
						contentBackgroundColor="#D5FBDB" dataProvider="{_fallasReportadas}" editable="false"
						enabled="{_dataReady&amp;&amp;!_updateData}"
						requestedRowCount="4" selectionChange="onFallaSelect();">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn width="80" dataField="_codigo" headerText="Código"></s:GridColumn>
						<s:GridColumn dataField="_fallaReal" headerText="Falla"></s:GridColumn>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			<s:TextArea id="_reparacion" x="99" y="59" width="402" height="75"
						change="dataPreDiagnosticChange();" contentBackgroundColor="#D5FBDB"
						editable="false" fontStyle="normal" tabIndex="1"/>
			<s:TextArea id="_referencia" x="99" y="243" width="402" height="29"
						change="dataPreDiagnosticChange();" contentBackgroundColor="#D5FBDB"
						editable="false" fontStyle="normal"/>
			<s:TextArea id="_pruebas" x="99" y="152" width="402" height="75"
						change="dataPreDiagnosticChange();" contentBackgroundColor="#D5FBDB"
						editable="false" fontStyle="normal" tabIndex="2"/>
			<s:Label x="37" y="157" text="Pruebas :"/>
			<s:Label x="28" y="249" text="Referencia :"/>
			<s:TextInput id="_fallaReal" x="99" y="21" width="314" contentBackgroundColor="#e7e7e7"
						 enabled="false" fontStyle="normal"/>
			<s:TextInput id="_codigoReal" x="421" y="21" width="79" contentBackgroundColor="#E7E7E7"
						 enabled="false" fontStyle="normal"/>
			<s:Label x="60" y="28" text="Falla :"/>
			<s:Label x="99" y="10" color="#767474" fontSize="10" fontStyle="italic" text="confimada"/>
			<s:Label x="421" y="10" color="#767474" fontSize="10" fontStyle="italic" text="código"/>
			<s:Label x="23" y="66" text="Reparación :"/>
			<s:Label x="99" y="48" color="#767474" fontSize="10" fontStyle="italic" text="de falla"/>
			<s:Label x="100" y="141" color="#767474" fontSize="10" fontStyle="italic" text="para confirmar reparación"/>
			<s:Label x="100" y="231" color="#767474" fontSize="10" fontStyle="italic" text="de apoyo"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Llamada de Cortesía"
							show="navigatorcontent2_showHandler(event)">
			<s:ComboBox id="_responsableCortesia" x="95" y="10" width="310" change="dataChange();"
						contentBackgroundColor="#D5FBDB" dataProvider="{SystemGlobals.EMPLEADOS}"
						labelFunction="concatenateName" tabIndex="1"/>
			<s:ComboBox id="_conformidadCortesia" x="95" y="92" width="86" change="dataChange();"
						contentBackgroundColor="#D5FBDB" dataProvider="{ConstantData.SiNo}" tabIndex="5"/>
			<s:ComboBox id="_pagadoCortesia" x="296" y="92" width="92" change="dataChange();"
						contentBackgroundColor="#D5FBDB" dataProvider="{ConstantData.SiNo}" tabIndex="6"/>
			<s:Label x="188" y="97" text="Servicio Pagado? :"/>
			<s:Label x="10" y="97" text="Conformidad :"/>
			<s:Label x="10" y="15" text="Responsable :"/>
			<s:Label x="26" y="59" text="Hablo con :"/>
			<s:Label x="15" y="138" text="Comentario :"/>
			<s:Label x="414" y="41" color="#767474" fontSize="10" fontStyle="italic" text="fecha"/>
			<s:Label x="494" y="41" color="#767474" fontSize="10" fontStyle="italic" text="hora"/>
			<s:TextArea id="_comentarioCortesia" x="95" y="134" width="625" height="78"
						change="dataChange();" contentBackgroundColor="#D5FBDB" tabIndex="7"/>
			<s:Button x="571" y="51" width="70" height="23" label="Ahora" click="getCurrentTime();"/>
			<s:TextInput id="_habloConCortesia" x="95" y="52" width="310" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" fontStyle="normal" tabIndex="2"/>
			<s:TextInput id="_fechaHabloCortesia" x="414" y="52" width="70" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" fontWeight="normal"
						 keyDown="_fechaHabloCortesia_keyDownHandler(event)" tabIndex="3"
						 textAlign="center"/>
			<s:TextInput id="_horaHabloCortesia" x="493" y="52" width="70" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" fontWeight="normal"
						 keyDown="_fechaHabloCortesia_keyDownHandler(event)" tabIndex="4"
						 textAlign="center"/>
			<s:Label x="95" y="124" color="#767474" fontSize="10" fontStyle="italic" text="del cliente"/>
			<s:Label x="95" y="82" color="#767474" fontSize="10" fontStyle="italic" text="por el servicio"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Cancelación de la Orden"
							show="navigatorcontent3_showHandler(event)">
			<s:ComboBox id="_responsableCancelacion" x="95" y="10" width="310" change="dataChange();"
						contentBackgroundColor="#D5FBDB" dataProvider="{SystemGlobals.EMPLEADOS}"
						labelFunction="concatenateName" tabIndex="1"/>
			<s:Label x="10" y="15" text="Responsable :"/>
			<s:Label x="26" y="59" text="Hablo con :"/>
			<s:Label x="46" y="95" text="Motivo :"/>
			<s:Label x="414" y="41" color="#767474" fontSize="10" fontStyle="italic" text="fecha"/>
			<s:Label x="494" y="41" color="#767474" fontSize="10" fontStyle="italic" text="hora"/>
			<s:TextArea id="_comentarioCancelacion" x="95" y="92" width="625" height="78"
						change="dataChange();" contentBackgroundColor="#D5FBDB" tabIndex="5"/>
			<s:Button x="571" y="51" width="70" height="23" label="Ahora" click="getCurrentTime2();"/>
			<s:TextInput id="_habloConCancelacion" x="95" y="52" width="310" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" fontStyle="normal" tabIndex="2"/>
			<s:TextInput id="_fechaCancelacion" x="414" y="52" width="70" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" fontWeight="normal"
						 keyDown="_fechaCancelacion_keyDownHandler(event)" tabIndex="3"
						 textAlign="center"/>
			<s:TextInput id="_horaCancelacion" x="493" y="52" width="70" change="dataChange();"
						 contentBackgroundColor="#D5FBDB" fontWeight="normal"
						 keyDown="_fechaCancelacion_keyDownHandler(event)" tabIndex="4"
						 textAlign="center"/>
			<s:Label x="95" y="82" color="#767474" fontSize="10" fontStyle="italic" text="de la cancelación"/>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:Button label="Actualizar" width="80" enabled="{_updateOrdenData&amp;&amp;!_newOrdenData}" visible="true" click="updateData();" y="608" x="601"/>
	<s:Button label="Cancelar" width="80" enabled="{_newOrdenData||_updateOrdenData}" visible="true" click="cancel();" y="608" x="689"/>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.random.constants.Catalogs;
			import mx.random.constants.ConstantData;
			import mx.random.constants.Languages;
			import mx.random.constants.SystemGlobals;
			import mx.random.converters.Converter;
			import mx.random.dataManagers.DataManager;
			import mx.random.dataManagers.EventManager;
			import mx.random.forms.Validator;
			import mx.random.web.WebApplication;
			import mx.random.windowManagers.PopManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.utils.StringUtil;
			
			private var _webApplication:WebApplication;
			private var Valid:Validator 			= new Validator();
			private var _workManager:Object 		= new Object();
			private var _MainService:RemoteObject 		= new RemoteObject();
			[Bindable]	private var _Data:DataManager 				= new DataManager(this);
			[Bindable]	private var _DataFailure:DataManager 				= new DataManager(this);
			[Bindable]	private var _DataResult:ArrayCollection 		= new ArrayCollection();
			[Bindable]	private var _DataDiagnosticoResult:ArrayCollection 		= new ArrayCollection();
			private var _eventManager:EventManager 		= new EventManager(this);
			private var _dataIndex:Number 			= 0;
			
			//-----------Event Manager -----------
			
			[Bindable]	public var _dataReady:Boolean 			= false;
			[Bindable]	public var _newData:Boolean 			= false;
			[Bindable]	public var _updateData:Boolean 			= false;
			[Bindable]	public var _fallaSelected:Boolean 		= false;
			
			[Bindable]	public var _newOrdenData				= false;
			[Bindable]	public var _dataOrdenReady				= false;
			[Bindable]	public var _updateOrdenData				= false;
			//-----------Event Manager -----------
			
			
			//-----------Local Vars -----------
			
			private var _selectedId:Number 			= 0;
			private var _selectedName:String 		= "";
			private var _serviceName  				= "Ordenes";
			private var _mainId  					= "_idOrden";
			private var _mainFocusField:String      = "_operador";
			private var _idOrdenSelected:Number		= -1;
			private var time1Changed = false;//Describes if the user has set a date for Courtesy Call
			private var time2Changed = false;//Describes if the user has set a date for Cancelation Order
			[Bindable] private var _cliente:Object = {};
			[Bindable] private var _equipo:Object = {};
			[Bindable] private var _orderHeader:Object = {};
			[Bindable] private var _fallasReportadas:ArrayCollection = new ArrayCollection();
			[Bindable] private var _prediagnosticos:ArrayCollection = new ArrayCollection();
			//-----------Local Vars -----------
			
			//---------------------------- Context ---------------------------------------------            
			
			public function set context(contextObj:Object):void{
				for( var p:String in contextObj){
					if(this.hasOwnProperty(p)){
						this[p] = contextObj[p];
					}
				}
			}
			
			public function set workManager(value:Object):void{
				_workManager = value;
			}
			
			public function set webApplication(value:WebApplication):void{
				_webApplication = value;
				initView();
			}
			
			public function set idOrden(value:Number):void{
				_idOrdenSelected = value;
			}
			
			public function get webApplication():WebApplication{ return _webApplication; } 
			
			//---------------------------- Context ---------------------------------------------  
			
			//-------------------------------- MainInit --------------------------------------
			// ------------------- View Extra Data -------------------------------
			
			private function get viewContext():Object{
				return {webApplication: _webApplication,
					workManager: this
				}					
			}
			
			private function addValidations():void{
				Valid.changeLanguage(Languages.SPANISH);
				
				//----------- Validaciones ---------------------------
				//Valid.addStringVal(_nombre,2,100,"Nombre");
				//Valid.addStringVal(_codigo,1,2,"Código");
				
				//----------- Validaciones ---------------------------
				
				
				Valid.validateOnChange = true;
				Valid.setErrorKnot(Validator.CIRCLE_KNOT,0xFF0000);
			}
			
			private function extraCreateData(params:Object):Object{				
				//params["_newsImage"] = _image;
				return params;
			}
			
			private function createRecordExtras():void{
				//_image = "defaultNew.jpg";
			}
			
			private function extraUpdateData(params:Object):Object{	
				//params['_color'] = areaColor.selectedColor;	
				if(this.time1Changed == true){
					var dDate:String = _fechaHabloCortesia.text + " " + _horaHabloCortesia.text;
					params._fechaHabloCortesia = dDate;
					this.time1Changed = false;
				}
				
				if(this.time2Changed == true){
					var dDate:String = _fechaCancelacion.text + " " + _horaCancelacion.text;
					params._fechaCancelacion = dDate;
					this.time2Changed = false;
				}
				
				params["_idOrden"] = _idOrdenSelected;
				return params;
			}
			
			private function loadExtraFields(params:Object):void{				
				//_image = params["_newsImage"];
			}
			
			private function forceImports():void{
				
			}
			
			private function concatenateName(value:Object):String
			{
				var nombre:String = "";
				if(value._nombre != null && value._nombre != undefined){
					nombre += StringUtil.trim(value._nombre) + " ";
				}
				if(value._paterno != null && value._paterno != undefined){
					nombre += StringUtil.trim(value._paterno) + " ";
				}
				if(value._materno != null && value._materno != undefined){
					nombre += StringUtil.trim(value._materno) + " ";
				}
				return nombre;
			}
			
			public function initView():void{
				forceImports();
				_MainService = _webApplication.getService(_serviceName);
				_Data.exceptions = [];
				_DataFailure.exceptions = ["_idOrdenFalla","_idOrden","_falla","_codigo","_creado","_modificado","_creadoPor","_modificadoPor","_idFamiliaFalla"];
				_MainService.addEventListener(FaultEvent.FAULT,onFault);
				initData();
				addValidations();
				
				//_searchType.selectedIndex = 1;
			}
			
			public function imageUploadReady(data:Object):void{
				
			}
			
			// ------------------- View Extra Data -------------------------------
			
			
			private function initData():void{
				_MainService.getFields("columnsFromClosingOrderForm");
				_MainService.getFailureFields();
				_MainService.getFields.addEventListener(ResultEvent.RESULT,onGetFieldsResult);
				_MainService.getFailureFields.addEventListener(ResultEvent.RESULT,onGetFailureFieldsResult);
				_dataReady = false;
				_dataOrdenReady = false;
			}
			
			public function closeWindow():void{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				PopUpManager.removePopUp(this);
			}
			
			//-------------------------------- MainInit --------------------------------------
			
			
			private function updateData():void{
				if(Valid.validateAll()){
					_dataOrdenReady = false;
					var params:Object = extraUpdateData(_Data.makeData());
					_MainService.updateRecord(params);
					_MainService.updateRecord.addEventListener(ResultEvent.RESULT,onUpdateComplete);
				}else{
					Alert.show(Valid.errors,"Error");
				}
			}
			
			
			private function deleteDataAlert():void{
				/*if(_listaPrediagnostico.selectedIndex!=-1){
				Alert.show("Desea borrar el registro seleccionado?","Atención",Alert.YES|Alert.CANCEL,this,deleteData);
				}else{
				Alert.show("No hay registro selecionado","Error");
				}*/
			}
			
			private function deleteData(e:CloseEvent):void{
				if(e.detail==Alert.YES){
					var params:Object = new Object();
					_MainService.deleteDiagnosticRecord(params);
					_MainService.deleteDiagnosticRecord.addEventListener(ResultEvent.RESULT,onDeleteDiagnosticComplete);
					_dataReady = false;
				}
			}
			
			private function cancel():void{
				resetBooleans();
				getData();
				Valid.validateAll();
			}
			private function cancelPrediagnostic():void{
				resetFailureBooleans();
				Valid.validateAll();
			}
			private function resetBooleans():void{
				_newOrdenData = false;
				_updateOrdenData = false;
			}
			private function resetFailureBooleans():void{
				_newData = false;
				_updateData = false;
			}
			
			private function dataPreDiagnosticChange():void{
				_updateData = true;
			}
			
			private function dataChange():void{
				_updateOrdenData = true;
			}
			
			private function onFallaSelect():void{
				if(_listaFallas != null){
					if(_listaFallas.selectedIndex!=-1) {
					}else{
						if(_fallasReportadas.length > 0){
							_listaFallas.selectedIndex = 0;
						}else{
							return;
						}
						
					}
					_listaFallas.setSelectedIndex(_listaFallas.selectedIndex);
					_DataFailure.loadData(_listaFallas.selectedItem);
					_fallaSelected = true;	
				}
			}
			
			private function getCurrentTime():void{
				this.time1Changed = true;
				var currentDateTime:Date = new Date();
				_fechaHabloCortesia.text = currentDateTime.fullYear + "-" + (currentDateTime.month+1) + "-" + currentDateTime.date;
				_horaHabloCortesia.text = currentDateTime.hours + ":" + currentDateTime.minutes + ":" + currentDateTime.seconds;
				dataChange();
			}
			
			private function getCurrentTime2():void{
				this.time2Changed = true;
				var currentDateTime:Date = new Date();
				_fechaCancelacion.text = currentDateTime.fullYear + "-" + (currentDateTime.month+1) + "-" + currentDateTime.date;
				_horaCancelacion.text = currentDateTime.hours + ":" + currentDateTime.minutes + ":" + currentDateTime.seconds;
				dataChange();
			}
			
			private function openImageEditor():void{
				/*if(_dataList.selectedIndex!=-1){
				//_newsIdNumber 	= new Number(_dataList.selectedItem._blogId);
				openPopUp("managers.ImageManager")
				}else{
				Alert.show("No hay registro selecionado","Error");
				}*/
			}
			//-------------------------------- ResultsEvents --------------------------------------		
			
			private function onGetFieldsResult(e:ResultEvent):void{
				_MainService.getFields.removeEventListener(ResultEvent.RESULT,onGetFieldsResult);
				if(e){
					if(e.result) {
						_Data.createFields(Converter.arrayConverter(e.result));
						getData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataOrdenReady = false;
				}
				_DataResult= new ArrayCollection();
			}
			
			private function onGetFailureFieldsResult(e:ResultEvent):void{
				_MainService.getFailureFields.removeEventListener(ResultEvent.RESULT,onGetFailureFieldsResult);
				if(e){
					if(e.result) {
						_DataFailure.createFields(Converter.arrayConverter(e.result));
						getFailureData();
					}
				}else{
					Alert.show("Error al cargar los datos","Error");
					_dataReady = false;
				}
				_DataDiagnosticoResult= new ArrayCollection();
			}
			
			private function getFailureData():void{
				_MainService.getFailuresFromOrder(_idOrdenSelected);
				_MainService.getFailuresFromOrder.addEventListener(ResultEvent.RESULT,onGetFailuresOrderResult);
				_dataReady = true;
				resetFailureBooleans();
			}
			
			private function getData():void{
				_MainService.getClientFromOrder(_idOrdenSelected);
				_MainService.getSpecificOrderHeader(_idOrdenSelected);
				_MainService.getEquipmentFromOrder(_idOrdenSelected);
				_MainService.getClosingOrder(_idOrdenSelected);
				
				_MainService.getClosingOrder.addEventListener(ResultEvent.RESULT,onGetClosingOrderResult);
				_MainService.getSpecificOrderHeader.addEventListener(ResultEvent.RESULT,onGetOrderResult);
				_MainService.getClientFromOrder.addEventListener(ResultEvent.RESULT,onGetDataClientResult);
				_MainService.getEquipmentFromOrder.addEventListener(ResultEvent.RESULT,onGetDataSystemResult);
				resetBooleans();
			}
			
			private function onFault(e:FaultEvent):void{
				Alert.show(e.fault.faultString,"Error");
			}
			
			private function onUpdateComplete(e:ResultEvent):void{
				_MainService.updateRecord.removeEventListener(ResultEvent.RESULT,onUpdateComplete);
				//Catalogs.reload();
				getData();
			}
			
			private function onUpdateFailureComplete(e:ResultEvent):void{
				_MainService.updateFailureRecord.removeEventListener(ResultEvent.RESULT,onUpdateFailureComplete);
				getFailureData();
			}
			
			private function onDeleteDiagnosticComplete(e:ResultEvent):void{
				_MainService.deleteDiagnosticRecord.removeEventListener(ResultEvent.RESULT,onDeleteDiagnosticComplete);
				_dataIndex = _DataResult.length-2;
				onFallaSelect();
			}
			
			//-------------------------------- ResultsEvents --------------------------------------	
			private function onGetClosingOrderResult(e:ResultEvent):void{
				_MainService.getClosingOrder.removeEventListener(ResultEvent.RESULT,onGetClosingOrderResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No existe orden con el id especificado","Atención")
				}else{
					_Data.loadData(_DataResult[0]); //Sólo debe de haber un registro o ninguno
				}
				_dataOrdenReady = true;				
			}
			
			private function onGetOrderResult(e:ResultEvent):void{
				_MainService.getSpecificOrderHeader.removeEventListener(ResultEvent.RESULT,onGetOrderResult);
				_DataResult = Converter.arrayConverter(e.result);
				if(_DataResult.length==0) {
					Alert.show("No existe orden con el id especificado","Atención")
				}else{
					_orderHeader = _DataResult[0];//Sólo debe de haber un registro o ninguno
				}
			}
			
			public function onGetFailuresOrderResult(e:ResultEvent):void{
				_MainService.getFailuresFromOrder.removeEventListener(ResultEvent.RESULT,onGetFailuresOrderResult);
				_fallasReportadas = Converter.arrayConverter(e.result);
				onFallaSelect();
			}
			
			private function onGetDataSystemResult(e:ResultEvent):void{
				_MainService.getSystemFromOrder.removeEventListener(ResultEvent.RESULT,onGetDataSystemResult);
				var resArr:ArrayCollection;
				resArr = Converter.arrayConverter(e.result);
				if(resArr.length > 0){
					_equipo = resArr[0]; //Sólo debe de haber un registro o ninguno
				}else{
					_equipo = {};
				}
			}
			//-------------------------------- POP UP WINDOW --------------------------------------	
			public function openPopUp(popUpName:String,modal:Boolean = true):void{
				var pop:TitleWindow = PopUpManager.createPopUp(this, getDefinitionByName("views."+popUpName) as Class, modal) as TitleWindow;
				pop.name = popUpName;
				pop.addEventListener(CloseEvent.CLOSE, closePopup);
				if(pop.hasOwnProperty("context")){
					Object(pop).context = viewContext;
				}
				PopUpManager.centerPopUp(pop);
			}
			
			private function onGetDataClientResult(e:ResultEvent):void{
				_MainService.getClientFromOrder.removeEventListener(ResultEvent.RESULT,onGetDataClientResult);
				var resArr:ArrayCollection;
				resArr = Converter.arrayConverter(e.result);
				if(resArr.length > 0){
					resArr[0]._nombreEstado = ConstantData.NationalStates[Number(resArr[0]._estado)].label;
					_cliente = resArr[0]; //Sólo debe de haber un registro o ninguno
				}else{
					_cliente = {};
				}
			}
			
			private function closePopup(e:CloseEvent):void{
				PopUpManager.removePopUp(e.target as TitleWindow);
			}
			//-------------------------------- POP UP WINDOW --------------------------------------
			
			//-------------------------------- Search Engine --------------------------------------
			/*
			private function searchFilter():void{
			_DataResult.filterFunction = vlidateSearch;
			_DataResult.refresh();
			}
			
			private function vlidateSearch(item:Object):Boolean{
			var isMatch:Boolean = false;           
			if(item[_searchType.selectedItem.value].toLowerCase().search(_searchFilter.toLowerCase()) != -1){
			isMatch = true
			}              
			return isMatch;              
			}
			
			private function search():void{
			_searchFilter = _searchField.text;
			searchFilter();
			}
			private var _searchFilter:String 			= new String();
			[Bindable]	private var _searchTypes:ArrayCollection 	= new ArrayCollection([{label:"Id",     	value:"_idArea"},{label:"Nombre",     	value:"_nombre"}]);
			*/
			//-------------------------------- Search Engine --------------------------------------					
			
			protected function navigatorcontent1_showHandler(event:FlexEvent):void
			{
				if(_DataResult.length==0) {
				}else{
					_Data.loadData(_DataResult[0]); //Sólo debe de haber un registro o ninguno
				}
				
			}
			
			protected function navigatorcontent2_showHandler(event:FlexEvent):void
			{
				if(_DataResult.length==0) {
				}else{
					_Data.loadData(_DataResult[0]); //Sólo debe de haber un registro o ninguno
				}
				
			}
			
			protected function navigatorcontent3_showHandler(event:FlexEvent):void
			{
				if(_DataResult.length==0) {
				}else{
					_Data.loadData(_DataResult[0]); //Sólo debe de haber un registro o ninguno
				}
				
			}
			
			protected function _fechaCancelacion_keyDownHandler(event:KeyboardEvent):void
			{
				this.time2Changed = true;
				
			}
			
			
			protected function _fechaHabloCortesia_keyDownHandler(event:KeyboardEvent):void
			{
				this.time1Changed = true;
				
			}
			
		]]>
	</fx:Script>
	
	
	
	
</s:TitleWindow>